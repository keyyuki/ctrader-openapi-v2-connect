// source: OpenApiModelMessages.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.ProtoOAAccessRights', null, global);
goog.exportSymbol('proto.ProtoOAAccountType', null, global);
goog.exportSymbol('proto.ProtoOAAsset', null, global);
goog.exportSymbol('proto.ProtoOAAssetClass', null, global);
goog.exportSymbol('proto.ProtoOABonusDepositWithdraw', null, global);
goog.exportSymbol('proto.ProtoOAChangeBalanceType', null, global);
goog.exportSymbol('proto.ProtoOAChangeBonusType', null, global);
goog.exportSymbol('proto.ProtoOAClientPermissionScope', null, global);
goog.exportSymbol('proto.ProtoOAClosePositionDetail', null, global);
goog.exportSymbol('proto.ProtoOACommissionType', null, global);
goog.exportSymbol('proto.ProtoOACtidProfile', null, global);
goog.exportSymbol('proto.ProtoOACtidTraderAccount', null, global);
goog.exportSymbol('proto.ProtoOADayOfWeek', null, global);
goog.exportSymbol('proto.ProtoOADeal', null, global);
goog.exportSymbol('proto.ProtoOADealStatus', null, global);
goog.exportSymbol('proto.ProtoOADepositWithdraw', null, global);
goog.exportSymbol('proto.ProtoOADepthQuote', null, global);
goog.exportSymbol('proto.ProtoOAErrorCode', null, global);
goog.exportSymbol('proto.ProtoOAExecutionType', null, global);
goog.exportSymbol('proto.ProtoOAExpectedMargin', null, global);
goog.exportSymbol('proto.ProtoOAInterval', null, global);
goog.exportSymbol('proto.ProtoOALightSymbol', null, global);
goog.exportSymbol('proto.ProtoOALimitedRiskMarginCalculationStrategy', null, global);
goog.exportSymbol('proto.ProtoOAMarginCall', null, global);
goog.exportSymbol('proto.ProtoOAMinCommissionType', null, global);
goog.exportSymbol('proto.ProtoOANotificationType', null, global);
goog.exportSymbol('proto.ProtoOAOrder', null, global);
goog.exportSymbol('proto.ProtoOAOrderStatus', null, global);
goog.exportSymbol('proto.ProtoOAOrderTriggerMethod', null, global);
goog.exportSymbol('proto.ProtoOAOrderType', null, global);
goog.exportSymbol('proto.ProtoOAPayloadType', null, global);
goog.exportSymbol('proto.ProtoOAPosition', null, global);
goog.exportSymbol('proto.ProtoOAPositionStatus', null, global);
goog.exportSymbol('proto.ProtoOAQuoteType', null, global);
goog.exportSymbol('proto.ProtoOASwapCalculationType', null, global);
goog.exportSymbol('proto.ProtoOASymbol', null, global);
goog.exportSymbol('proto.ProtoOASymbolCategory', null, global);
goog.exportSymbol('proto.ProtoOASymbolDistanceType', null, global);
goog.exportSymbol('proto.ProtoOATickData', null, global);
goog.exportSymbol('proto.ProtoOATimeInForce', null, global);
goog.exportSymbol('proto.ProtoOATotalMarginCalculationType', null, global);
goog.exportSymbol('proto.ProtoOATradeData', null, global);
goog.exportSymbol('proto.ProtoOATradeSide', null, global);
goog.exportSymbol('proto.ProtoOATrader', null, global);
goog.exportSymbol('proto.ProtoOATradingMode', null, global);
goog.exportSymbol('proto.ProtoOATrendbar', null, global);
goog.exportSymbol('proto.ProtoOATrendbarPeriod', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoOAAsset = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ProtoOAAsset, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoOAAsset.displayName = 'proto.ProtoOAAsset';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoOASymbol = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ProtoOASymbol.repeatedFields_, null);
};
goog.inherits(proto.ProtoOASymbol, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoOASymbol.displayName = 'proto.ProtoOASymbol';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoOALightSymbol = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ProtoOALightSymbol, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoOALightSymbol.displayName = 'proto.ProtoOALightSymbol';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoOASymbolCategory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ProtoOASymbolCategory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoOASymbolCategory.displayName = 'proto.ProtoOASymbolCategory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoOAInterval = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ProtoOAInterval, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoOAInterval.displayName = 'proto.ProtoOAInterval';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoOATrader = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ProtoOATrader, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoOATrader.displayName = 'proto.ProtoOATrader';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoOAPosition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ProtoOAPosition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoOAPosition.displayName = 'proto.ProtoOAPosition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoOATradeData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ProtoOATradeData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoOATradeData.displayName = 'proto.ProtoOATradeData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoOAOrder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ProtoOAOrder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoOAOrder.displayName = 'proto.ProtoOAOrder';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoOABonusDepositWithdraw = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ProtoOABonusDepositWithdraw, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoOABonusDepositWithdraw.displayName = 'proto.ProtoOABonusDepositWithdraw';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoOADepositWithdraw = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ProtoOADepositWithdraw, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoOADepositWithdraw.displayName = 'proto.ProtoOADepositWithdraw';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoOADeal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ProtoOADeal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoOADeal.displayName = 'proto.ProtoOADeal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoOAClosePositionDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ProtoOAClosePositionDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoOAClosePositionDetail.displayName = 'proto.ProtoOAClosePositionDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoOATrendbar = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ProtoOATrendbar, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoOATrendbar.displayName = 'proto.ProtoOATrendbar';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoOAExpectedMargin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ProtoOAExpectedMargin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoOAExpectedMargin.displayName = 'proto.ProtoOAExpectedMargin';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoOATickData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ProtoOATickData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoOATickData.displayName = 'proto.ProtoOATickData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoOACtidProfile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ProtoOACtidProfile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoOACtidProfile.displayName = 'proto.ProtoOACtidProfile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoOACtidTraderAccount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ProtoOACtidTraderAccount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoOACtidTraderAccount.displayName = 'proto.ProtoOACtidTraderAccount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoOAAssetClass = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ProtoOAAssetClass, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoOAAssetClass.displayName = 'proto.ProtoOAAssetClass';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoOADepthQuote = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ProtoOADepthQuote, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoOADepthQuote.displayName = 'proto.ProtoOADepthQuote';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ProtoOAMarginCall = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ProtoOAMarginCall, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ProtoOAMarginCall.displayName = 'proto.ProtoOAMarginCall';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoOAAsset.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoOAAsset.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoOAAsset} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOAAsset.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    displayname: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    digits: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoOAAsset}
 */
proto.ProtoOAAsset.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoOAAsset;
  return proto.ProtoOAAsset.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoOAAsset} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoOAAsset}
 */
proto.ProtoOAAsset.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAssetid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayname(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDigits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoOAAsset.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoOAAsset.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoOAAsset} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOAAsset.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * required int64 assetId = 1;
 * @return {number}
 */
proto.ProtoOAAsset.prototype.getAssetid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAAsset} returns this
 */
proto.ProtoOAAsset.prototype.setAssetid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAAsset} returns this
 */
proto.ProtoOAAsset.prototype.clearAssetid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAAsset.prototype.hasAssetid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required string name = 2;
 * @return {string}
 */
proto.ProtoOAAsset.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ProtoOAAsset} returns this
 */
proto.ProtoOAAsset.prototype.setName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAAsset} returns this
 */
proto.ProtoOAAsset.prototype.clearName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAAsset.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string displayName = 3;
 * @return {string}
 */
proto.ProtoOAAsset.prototype.getDisplayname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ProtoOAAsset} returns this
 */
proto.ProtoOAAsset.prototype.setDisplayname = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAAsset} returns this
 */
proto.ProtoOAAsset.prototype.clearDisplayname = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAAsset.prototype.hasDisplayname = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 digits = 4;
 * @return {number}
 */
proto.ProtoOAAsset.prototype.getDigits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAAsset} returns this
 */
proto.ProtoOAAsset.prototype.setDigits = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAAsset} returns this
 */
proto.ProtoOAAsset.prototype.clearDigits = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAAsset.prototype.hasDigits = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ProtoOASymbol.repeatedFields_ = [13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoOASymbol.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoOASymbol.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoOASymbol} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOASymbol.toObject = function(includeInstance, msg) {
  var f, obj = {
    symbolid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    digits: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    pipposition: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    enableshortselling: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    guaranteedstoploss: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
    swaprollover3days: jspb.Message.getFieldWithDefault(msg, 6, 1),
    swaplong: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    swapshort: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    maxvolume: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    minvolume: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    stepvolume: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    maxexposure: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    scheduleList: jspb.Message.toObjectList(msg.getScheduleList(),
    proto.ProtoOAInterval.toObject, includeInstance),
    commission: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    commissiontype: jspb.Message.getFieldWithDefault(msg, 15, 1),
    sldistance: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    tpdistance: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    gsldistance: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f,
    gslcharge: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f,
    distancesetin: jspb.Message.getFieldWithDefault(msg, 20, 1),
    mincommission: (f = jspb.Message.getField(msg, 21)) == null ? undefined : f,
    mincommissiontype: jspb.Message.getFieldWithDefault(msg, 22, 1),
    mincommissionasset: jspb.Message.getFieldWithDefault(msg, 23, "USD"),
    rollovercommission: (f = jspb.Message.getField(msg, 24)) == null ? undefined : f,
    skiprolloverdays: (f = jspb.Message.getField(msg, 25)) == null ? undefined : f,
    scheduletimezone: (f = jspb.Message.getField(msg, 26)) == null ? undefined : f,
    tradingmode: jspb.Message.getFieldWithDefault(msg, 27, 0),
    rollovercommission3days: jspb.Message.getFieldWithDefault(msg, 28, 1),
    swapcalculationtype: jspb.Message.getFieldWithDefault(msg, 29, 0),
    lotsize: (f = jspb.Message.getField(msg, 30)) == null ? undefined : f,
    precisetradingcommissionrate: (f = jspb.Message.getField(msg, 31)) == null ? undefined : f,
    precisemincommission: (f = jspb.Message.getField(msg, 32)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoOASymbol}
 */
proto.ProtoOASymbol.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoOASymbol;
  return proto.ProtoOASymbol.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoOASymbol} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoOASymbol}
 */
proto.ProtoOASymbol.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSymbolid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDigits(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPipposition(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableshortselling(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGuaranteedstoploss(value);
      break;
    case 6:
      var value = /** @type {!proto.ProtoOADayOfWeek} */ (reader.readEnum());
      msg.setSwaprollover3days(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSwaplong(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSwapshort(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxvolume(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinvolume(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStepvolume(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxexposure(value);
      break;
    case 13:
      var value = new proto.ProtoOAInterval;
      reader.readMessage(value,proto.ProtoOAInterval.deserializeBinaryFromReader);
      msg.addSchedule(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCommission(value);
      break;
    case 15:
      var value = /** @type {!proto.ProtoOACommissionType} */ (reader.readEnum());
      msg.setCommissiontype(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSldistance(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTpdistance(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGsldistance(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGslcharge(value);
      break;
    case 20:
      var value = /** @type {!proto.ProtoOASymbolDistanceType} */ (reader.readEnum());
      msg.setDistancesetin(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMincommission(value);
      break;
    case 22:
      var value = /** @type {!proto.ProtoOAMinCommissionType} */ (reader.readEnum());
      msg.setMincommissiontype(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setMincommissionasset(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRollovercommission(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSkiprolloverdays(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setScheduletimezone(value);
      break;
    case 27:
      var value = /** @type {!proto.ProtoOATradingMode} */ (reader.readEnum());
      msg.setTradingmode(value);
      break;
    case 28:
      var value = /** @type {!proto.ProtoOADayOfWeek} */ (reader.readEnum());
      msg.setRollovercommission3days(value);
      break;
    case 29:
      var value = /** @type {!proto.ProtoOASwapCalculationType} */ (reader.readEnum());
      msg.setSwapcalculationtype(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLotsize(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrecisetradingcommissionrate(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrecisemincommission(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoOASymbol.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoOASymbol.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoOASymbol} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOASymbol.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {!proto.ProtoOADayOfWeek} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getScheduleList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.ProtoOAInterval.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = /** @type {!proto.ProtoOACommissionType} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeEnum(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint32(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint32(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeUint32(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeInt64(
      19,
      f
    );
  }
  f = /** @type {!proto.ProtoOASymbolDistanceType} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeEnum(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeInt64(
      21,
      f
    );
  }
  f = /** @type {!proto.ProtoOAMinCommissionType} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeEnum(
      22,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeString(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeInt64(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeInt32(
      25,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeString(
      26,
      f
    );
  }
  f = /** @type {!proto.ProtoOATradingMode} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeEnum(
      27,
      f
    );
  }
  f = /** @type {!proto.ProtoOADayOfWeek} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeEnum(
      28,
      f
    );
  }
  f = /** @type {!proto.ProtoOASwapCalculationType} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeEnum(
      29,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeInt64(
      30,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeInt64(
      31,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeInt64(
      32,
      f
    );
  }
};


/**
 * required int64 symbolId = 1;
 * @return {number}
 */
proto.ProtoOASymbol.prototype.getSymbolid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setSymbolid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearSymbolid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasSymbolid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int32 digits = 2;
 * @return {number}
 */
proto.ProtoOASymbol.prototype.getDigits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setDigits = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearDigits = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasDigits = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required int32 pipPosition = 3;
 * @return {number}
 */
proto.ProtoOASymbol.prototype.getPipposition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setPipposition = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearPipposition = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasPipposition = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool enableShortSelling = 4;
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.getEnableshortselling = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setEnableshortselling = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearEnableshortselling = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasEnableshortselling = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool guaranteedStopLoss = 5;
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.getGuaranteedstoploss = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setGuaranteedstoploss = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearGuaranteedstoploss = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasGuaranteedstoploss = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ProtoOADayOfWeek swapRollover3Days = 6;
 * @return {!proto.ProtoOADayOfWeek}
 */
proto.ProtoOASymbol.prototype.getSwaprollover3days = function() {
  return /** @type {!proto.ProtoOADayOfWeek} */ (jspb.Message.getFieldWithDefault(this, 6, 1));
};


/**
 * @param {!proto.ProtoOADayOfWeek} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setSwaprollover3days = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearSwaprollover3days = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasSwaprollover3days = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double swapLong = 7;
 * @return {number}
 */
proto.ProtoOASymbol.prototype.getSwaplong = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setSwaplong = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearSwaplong = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasSwaplong = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double swapShort = 8;
 * @return {number}
 */
proto.ProtoOASymbol.prototype.getSwapshort = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setSwapshort = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearSwapshort = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasSwapshort = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int64 maxVolume = 9;
 * @return {number}
 */
proto.ProtoOASymbol.prototype.getMaxvolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setMaxvolume = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearMaxvolume = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasMaxvolume = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int64 minVolume = 10;
 * @return {number}
 */
proto.ProtoOASymbol.prototype.getMinvolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setMinvolume = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearMinvolume = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasMinvolume = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int64 stepVolume = 11;
 * @return {number}
 */
proto.ProtoOASymbol.prototype.getStepvolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setStepvolume = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearStepvolume = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasStepvolume = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint64 maxExposure = 12;
 * @return {number}
 */
proto.ProtoOASymbol.prototype.getMaxexposure = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setMaxexposure = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearMaxexposure = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasMaxexposure = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * repeated ProtoOAInterval schedule = 13;
 * @return {!Array<!proto.ProtoOAInterval>}
 */
proto.ProtoOASymbol.prototype.getScheduleList = function() {
  return /** @type{!Array<!proto.ProtoOAInterval>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ProtoOAInterval, 13));
};


/**
 * @param {!Array<!proto.ProtoOAInterval>} value
 * @return {!proto.ProtoOASymbol} returns this
*/
proto.ProtoOASymbol.prototype.setScheduleList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.ProtoOAInterval=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ProtoOAInterval}
 */
proto.ProtoOASymbol.prototype.addSchedule = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.ProtoOAInterval, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearScheduleList = function() {
  return this.setScheduleList([]);
};


/**
 * optional int64 commission = 14;
 * @return {number}
 */
proto.ProtoOASymbol.prototype.getCommission = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setCommission = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearCommission = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasCommission = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional ProtoOACommissionType commissionType = 15;
 * @return {!proto.ProtoOACommissionType}
 */
proto.ProtoOASymbol.prototype.getCommissiontype = function() {
  return /** @type {!proto.ProtoOACommissionType} */ (jspb.Message.getFieldWithDefault(this, 15, 1));
};


/**
 * @param {!proto.ProtoOACommissionType} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setCommissiontype = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearCommissiontype = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasCommissiontype = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint32 slDistance = 16;
 * @return {number}
 */
proto.ProtoOASymbol.prototype.getSldistance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setSldistance = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearSldistance = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasSldistance = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint32 tpDistance = 17;
 * @return {number}
 */
proto.ProtoOASymbol.prototype.getTpdistance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setTpdistance = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearTpdistance = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasTpdistance = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional uint32 gslDistance = 18;
 * @return {number}
 */
proto.ProtoOASymbol.prototype.getGsldistance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setGsldistance = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearGsldistance = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasGsldistance = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional int64 gslCharge = 19;
 * @return {number}
 */
proto.ProtoOASymbol.prototype.getGslcharge = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setGslcharge = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearGslcharge = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasGslcharge = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional ProtoOASymbolDistanceType distanceSetIn = 20;
 * @return {!proto.ProtoOASymbolDistanceType}
 */
proto.ProtoOASymbol.prototype.getDistancesetin = function() {
  return /** @type {!proto.ProtoOASymbolDistanceType} */ (jspb.Message.getFieldWithDefault(this, 20, 1));
};


/**
 * @param {!proto.ProtoOASymbolDistanceType} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setDistancesetin = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearDistancesetin = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasDistancesetin = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional int64 minCommission = 21;
 * @return {number}
 */
proto.ProtoOASymbol.prototype.getMincommission = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setMincommission = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearMincommission = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasMincommission = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional ProtoOAMinCommissionType minCommissionType = 22;
 * @return {!proto.ProtoOAMinCommissionType}
 */
proto.ProtoOASymbol.prototype.getMincommissiontype = function() {
  return /** @type {!proto.ProtoOAMinCommissionType} */ (jspb.Message.getFieldWithDefault(this, 22, 1));
};


/**
 * @param {!proto.ProtoOAMinCommissionType} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setMincommissiontype = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearMincommissiontype = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasMincommissiontype = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional string minCommissionAsset = 23;
 * @return {string}
 */
proto.ProtoOASymbol.prototype.getMincommissionasset = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, "USD"));
};


/**
 * @param {string} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setMincommissionasset = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearMincommissionasset = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasMincommissionasset = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional int64 rolloverCommission = 24;
 * @return {number}
 */
proto.ProtoOASymbol.prototype.getRollovercommission = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setRollovercommission = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearRollovercommission = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasRollovercommission = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional int32 skipRolloverDays = 25;
 * @return {number}
 */
proto.ProtoOASymbol.prototype.getSkiprolloverdays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setSkiprolloverdays = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearSkiprolloverdays = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasSkiprolloverdays = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional string scheduleTimeZone = 26;
 * @return {string}
 */
proto.ProtoOASymbol.prototype.getScheduletimezone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setScheduletimezone = function(value) {
  return jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearScheduletimezone = function() {
  return jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasScheduletimezone = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional ProtoOATradingMode tradingMode = 27;
 * @return {!proto.ProtoOATradingMode}
 */
proto.ProtoOASymbol.prototype.getTradingmode = function() {
  return /** @type {!proto.ProtoOATradingMode} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {!proto.ProtoOATradingMode} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setTradingmode = function(value) {
  return jspb.Message.setField(this, 27, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearTradingmode = function() {
  return jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasTradingmode = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional ProtoOADayOfWeek rolloverCommission3Days = 28;
 * @return {!proto.ProtoOADayOfWeek}
 */
proto.ProtoOASymbol.prototype.getRollovercommission3days = function() {
  return /** @type {!proto.ProtoOADayOfWeek} */ (jspb.Message.getFieldWithDefault(this, 28, 1));
};


/**
 * @param {!proto.ProtoOADayOfWeek} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setRollovercommission3days = function(value) {
  return jspb.Message.setField(this, 28, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearRollovercommission3days = function() {
  return jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasRollovercommission3days = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional ProtoOASwapCalculationType swapCalculationType = 29;
 * @return {!proto.ProtoOASwapCalculationType}
 */
proto.ProtoOASymbol.prototype.getSwapcalculationtype = function() {
  return /** @type {!proto.ProtoOASwapCalculationType} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/**
 * @param {!proto.ProtoOASwapCalculationType} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setSwapcalculationtype = function(value) {
  return jspb.Message.setField(this, 29, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearSwapcalculationtype = function() {
  return jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasSwapcalculationtype = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional int64 lotSize = 30;
 * @return {number}
 */
proto.ProtoOASymbol.prototype.getLotsize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setLotsize = function(value) {
  return jspb.Message.setField(this, 30, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearLotsize = function() {
  return jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasLotsize = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional int64 preciseTradingCommissionRate = 31;
 * @return {number}
 */
proto.ProtoOASymbol.prototype.getPrecisetradingcommissionrate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setPrecisetradingcommissionrate = function(value) {
  return jspb.Message.setField(this, 31, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearPrecisetradingcommissionrate = function() {
  return jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasPrecisetradingcommissionrate = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional int64 preciseMinCommission = 32;
 * @return {number}
 */
proto.ProtoOASymbol.prototype.getPrecisemincommission = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.setPrecisemincommission = function(value) {
  return jspb.Message.setField(this, 32, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbol} returns this
 */
proto.ProtoOASymbol.prototype.clearPrecisemincommission = function() {
  return jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbol.prototype.hasPrecisemincommission = function() {
  return jspb.Message.getField(this, 32) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoOALightSymbol.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoOALightSymbol.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoOALightSymbol} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOALightSymbol.toObject = function(includeInstance, msg) {
  var f, obj = {
    symbolid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    symbolname: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    enabled: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    baseassetid: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    quoteassetid: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    symbolcategoryid: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    description: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoOALightSymbol}
 */
proto.ProtoOALightSymbol.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoOALightSymbol;
  return proto.ProtoOALightSymbol.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoOALightSymbol} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoOALightSymbol}
 */
proto.ProtoOALightSymbol.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSymbolid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbolname(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBaseassetid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQuoteassetid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSymbolcategoryid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoOALightSymbol.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoOALightSymbol.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoOALightSymbol} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOALightSymbol.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * required int64 symbolId = 1;
 * @return {number}
 */
proto.ProtoOALightSymbol.prototype.getSymbolid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOALightSymbol} returns this
 */
proto.ProtoOALightSymbol.prototype.setSymbolid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOALightSymbol} returns this
 */
proto.ProtoOALightSymbol.prototype.clearSymbolid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOALightSymbol.prototype.hasSymbolid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string symbolName = 2;
 * @return {string}
 */
proto.ProtoOALightSymbol.prototype.getSymbolname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ProtoOALightSymbol} returns this
 */
proto.ProtoOALightSymbol.prototype.setSymbolname = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOALightSymbol} returns this
 */
proto.ProtoOALightSymbol.prototype.clearSymbolname = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOALightSymbol.prototype.hasSymbolname = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool enabled = 3;
 * @return {boolean}
 */
proto.ProtoOALightSymbol.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ProtoOALightSymbol} returns this
 */
proto.ProtoOALightSymbol.prototype.setEnabled = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOALightSymbol} returns this
 */
proto.ProtoOALightSymbol.prototype.clearEnabled = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOALightSymbol.prototype.hasEnabled = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 baseAssetId = 4;
 * @return {number}
 */
proto.ProtoOALightSymbol.prototype.getBaseassetid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOALightSymbol} returns this
 */
proto.ProtoOALightSymbol.prototype.setBaseassetid = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOALightSymbol} returns this
 */
proto.ProtoOALightSymbol.prototype.clearBaseassetid = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOALightSymbol.prototype.hasBaseassetid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 quoteAssetId = 5;
 * @return {number}
 */
proto.ProtoOALightSymbol.prototype.getQuoteassetid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOALightSymbol} returns this
 */
proto.ProtoOALightSymbol.prototype.setQuoteassetid = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOALightSymbol} returns this
 */
proto.ProtoOALightSymbol.prototype.clearQuoteassetid = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOALightSymbol.prototype.hasQuoteassetid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int64 symbolCategoryId = 6;
 * @return {number}
 */
proto.ProtoOALightSymbol.prototype.getSymbolcategoryid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOALightSymbol} returns this
 */
proto.ProtoOALightSymbol.prototype.setSymbolcategoryid = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOALightSymbol} returns this
 */
proto.ProtoOALightSymbol.prototype.clearSymbolcategoryid = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOALightSymbol.prototype.hasSymbolcategoryid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string description = 7;
 * @return {string}
 */
proto.ProtoOALightSymbol.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ProtoOALightSymbol} returns this
 */
proto.ProtoOALightSymbol.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOALightSymbol} returns this
 */
proto.ProtoOALightSymbol.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOALightSymbol.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoOASymbolCategory.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoOASymbolCategory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoOASymbolCategory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOASymbolCategory.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    assetclassid: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoOASymbolCategory}
 */
proto.ProtoOASymbolCategory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoOASymbolCategory;
  return proto.ProtoOASymbolCategory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoOASymbolCategory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoOASymbolCategory}
 */
proto.ProtoOASymbolCategory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAssetclassid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoOASymbolCategory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoOASymbolCategory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoOASymbolCategory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOASymbolCategory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * required int64 id = 1;
 * @return {number}
 */
proto.ProtoOASymbolCategory.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOASymbolCategory} returns this
 */
proto.ProtoOASymbolCategory.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbolCategory} returns this
 */
proto.ProtoOASymbolCategory.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbolCategory.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int64 assetClassId = 2;
 * @return {number}
 */
proto.ProtoOASymbolCategory.prototype.getAssetclassid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOASymbolCategory} returns this
 */
proto.ProtoOASymbolCategory.prototype.setAssetclassid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbolCategory} returns this
 */
proto.ProtoOASymbolCategory.prototype.clearAssetclassid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbolCategory.prototype.hasAssetclassid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required string name = 3;
 * @return {string}
 */
proto.ProtoOASymbolCategory.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ProtoOASymbolCategory} returns this
 */
proto.ProtoOASymbolCategory.prototype.setName = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOASymbolCategory} returns this
 */
proto.ProtoOASymbolCategory.prototype.clearName = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOASymbolCategory.prototype.hasName = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoOAInterval.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoOAInterval.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoOAInterval} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOAInterval.toObject = function(includeInstance, msg) {
  var f, obj = {
    startsecond: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    endsecond: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoOAInterval}
 */
proto.ProtoOAInterval.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoOAInterval;
  return proto.ProtoOAInterval.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoOAInterval} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoOAInterval}
 */
proto.ProtoOAInterval.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStartsecond(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEndsecond(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoOAInterval.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoOAInterval.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoOAInterval} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOAInterval.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * required uint32 startSecond = 3;
 * @return {number}
 */
proto.ProtoOAInterval.prototype.getStartsecond = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAInterval} returns this
 */
proto.ProtoOAInterval.prototype.setStartsecond = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAInterval} returns this
 */
proto.ProtoOAInterval.prototype.clearStartsecond = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAInterval.prototype.hasStartsecond = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required uint32 endSecond = 4;
 * @return {number}
 */
proto.ProtoOAInterval.prototype.getEndsecond = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAInterval} returns this
 */
proto.ProtoOAInterval.prototype.setEndsecond = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAInterval} returns this
 */
proto.ProtoOAInterval.prototype.clearEndsecond = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAInterval.prototype.hasEndsecond = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoOATrader.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoOATrader.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoOATrader} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOATrader.toObject = function(includeInstance, msg) {
  var f, obj = {
    ctidtraderaccountid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    balance: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    balanceversion: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    managerbonus: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    ibbonus: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    nonwithdrawablebonus: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    accessrights: jspb.Message.getFieldWithDefault(msg, 7, 0),
    depositassetid: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    swapfree: (f = jspb.Message.getBooleanField(msg, 9)) == null ? undefined : f,
    leverageincents: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    totalmargincalculationtype: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    maxleverage: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    frenchrisk: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f,
    traderlogin: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    accounttype: jspb.Message.getFieldWithDefault(msg, 15, 0),
    brokername: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    registrationtimestamp: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    islimitedrisk: (f = jspb.Message.getBooleanField(msg, 18)) == null ? undefined : f,
    limitedriskmargincalculationstrategy: jspb.Message.getFieldWithDefault(msg, 19, 0),
    moneydigits: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoOATrader}
 */
proto.ProtoOATrader.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoOATrader;
  return proto.ProtoOATrader.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoOATrader} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoOATrader}
 */
proto.ProtoOATrader.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCtidtraderaccountid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBalance(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBalanceversion(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setManagerbonus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIbbonus(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNonwithdrawablebonus(value);
      break;
    case 7:
      var value = /** @type {!proto.ProtoOAAccessRights} */ (reader.readEnum());
      msg.setAccessrights(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDepositassetid(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSwapfree(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLeverageincents(value);
      break;
    case 11:
      var value = /** @type {!proto.ProtoOATotalMarginCalculationType} */ (reader.readEnum());
      msg.setTotalmargincalculationtype(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxleverage(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFrenchrisk(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTraderlogin(value);
      break;
    case 15:
      var value = /** @type {!proto.ProtoOAAccountType} */ (reader.readEnum());
      msg.setAccounttype(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrokername(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRegistrationtimestamp(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIslimitedrisk(value);
      break;
    case 19:
      var value = /** @type {!proto.ProtoOALimitedRiskMarginCalculationStrategy} */ (reader.readEnum());
      msg.setLimitedriskmargincalculationstrategy(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMoneydigits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoOATrader.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoOATrader.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoOATrader} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOATrader.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = /** @type {!proto.ProtoOAAccessRights} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {!proto.ProtoOATotalMarginCalculationType} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = /** @type {!proto.ProtoOAAccountType} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeEnum(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeInt64(
      17,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeBool(
      18,
      f
    );
  }
  f = /** @type {!proto.ProtoOALimitedRiskMarginCalculationStrategy} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeEnum(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeUint32(
      20,
      f
    );
  }
};


/**
 * required int64 ctidTraderAccountId = 1;
 * @return {number}
 */
proto.ProtoOATrader.prototype.getCtidtraderaccountid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.setCtidtraderaccountid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.clearCtidtraderaccountid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrader.prototype.hasCtidtraderaccountid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int64 balance = 2;
 * @return {number}
 */
proto.ProtoOATrader.prototype.getBalance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.setBalance = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.clearBalance = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrader.prototype.hasBalance = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 balanceVersion = 3;
 * @return {number}
 */
proto.ProtoOATrader.prototype.getBalanceversion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.setBalanceversion = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.clearBalanceversion = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrader.prototype.hasBalanceversion = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 managerBonus = 4;
 * @return {number}
 */
proto.ProtoOATrader.prototype.getManagerbonus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.setManagerbonus = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.clearManagerbonus = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrader.prototype.hasManagerbonus = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 ibBonus = 5;
 * @return {number}
 */
proto.ProtoOATrader.prototype.getIbbonus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.setIbbonus = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.clearIbbonus = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrader.prototype.hasIbbonus = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int64 nonWithdrawableBonus = 6;
 * @return {number}
 */
proto.ProtoOATrader.prototype.getNonwithdrawablebonus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.setNonwithdrawablebonus = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.clearNonwithdrawablebonus = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrader.prototype.hasNonwithdrawablebonus = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ProtoOAAccessRights accessRights = 7;
 * @return {!proto.ProtoOAAccessRights}
 */
proto.ProtoOATrader.prototype.getAccessrights = function() {
  return /** @type {!proto.ProtoOAAccessRights} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.ProtoOAAccessRights} value
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.setAccessrights = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.clearAccessrights = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrader.prototype.hasAccessrights = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * required int64 depositAssetId = 8;
 * @return {number}
 */
proto.ProtoOATrader.prototype.getDepositassetid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.setDepositassetid = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.clearDepositassetid = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrader.prototype.hasDepositassetid = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool swapFree = 9;
 * @return {boolean}
 */
proto.ProtoOATrader.prototype.getSwapfree = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.setSwapfree = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.clearSwapfree = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrader.prototype.hasSwapfree = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 leverageInCents = 10;
 * @return {number}
 */
proto.ProtoOATrader.prototype.getLeverageincents = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.setLeverageincents = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.clearLeverageincents = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrader.prototype.hasLeverageincents = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ProtoOATotalMarginCalculationType totalMarginCalculationType = 11;
 * @return {!proto.ProtoOATotalMarginCalculationType}
 */
proto.ProtoOATrader.prototype.getTotalmargincalculationtype = function() {
  return /** @type {!proto.ProtoOATotalMarginCalculationType} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.ProtoOATotalMarginCalculationType} value
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.setTotalmargincalculationtype = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.clearTotalmargincalculationtype = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrader.prototype.hasTotalmargincalculationtype = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint32 maxLeverage = 12;
 * @return {number}
 */
proto.ProtoOATrader.prototype.getMaxleverage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.setMaxleverage = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.clearMaxleverage = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrader.prototype.hasMaxleverage = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool frenchRisk = 13;
 * @return {boolean}
 */
proto.ProtoOATrader.prototype.getFrenchrisk = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.setFrenchrisk = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.clearFrenchrisk = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrader.prototype.hasFrenchrisk = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional int64 traderLogin = 14;
 * @return {number}
 */
proto.ProtoOATrader.prototype.getTraderlogin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.setTraderlogin = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.clearTraderlogin = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrader.prototype.hasTraderlogin = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional ProtoOAAccountType accountType = 15;
 * @return {!proto.ProtoOAAccountType}
 */
proto.ProtoOATrader.prototype.getAccounttype = function() {
  return /** @type {!proto.ProtoOAAccountType} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {!proto.ProtoOAAccountType} value
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.setAccounttype = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.clearAccounttype = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrader.prototype.hasAccounttype = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string brokerName = 16;
 * @return {string}
 */
proto.ProtoOATrader.prototype.getBrokername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.setBrokername = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.clearBrokername = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrader.prototype.hasBrokername = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional int64 registrationTimestamp = 17;
 * @return {number}
 */
proto.ProtoOATrader.prototype.getRegistrationtimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.setRegistrationtimestamp = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.clearRegistrationtimestamp = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrader.prototype.hasRegistrationtimestamp = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional bool isLimitedRisk = 18;
 * @return {boolean}
 */
proto.ProtoOATrader.prototype.getIslimitedrisk = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.setIslimitedrisk = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.clearIslimitedrisk = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrader.prototype.hasIslimitedrisk = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional ProtoOALimitedRiskMarginCalculationStrategy limitedRiskMarginCalculationStrategy = 19;
 * @return {!proto.ProtoOALimitedRiskMarginCalculationStrategy}
 */
proto.ProtoOATrader.prototype.getLimitedriskmargincalculationstrategy = function() {
  return /** @type {!proto.ProtoOALimitedRiskMarginCalculationStrategy} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {!proto.ProtoOALimitedRiskMarginCalculationStrategy} value
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.setLimitedriskmargincalculationstrategy = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.clearLimitedriskmargincalculationstrategy = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrader.prototype.hasLimitedriskmargincalculationstrategy = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional uint32 moneyDigits = 20;
 * @return {number}
 */
proto.ProtoOATrader.prototype.getMoneydigits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.setMoneydigits = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrader} returns this
 */
proto.ProtoOATrader.prototype.clearMoneydigits = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrader.prototype.hasMoneydigits = function() {
  return jspb.Message.getField(this, 20) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoOAPosition.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoOAPosition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoOAPosition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOAPosition.toObject = function(includeInstance, msg) {
  var f, obj = {
    positionid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    tradedata: (f = msg.getTradedata()) && proto.ProtoOATradeData.toObject(includeInstance, f),
    positionstatus: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    swap: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    price: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    stoploss: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    takeprofit: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    utclastupdatetimestamp: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    commission: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    marginrate: (f = jspb.Message.getOptionalFloatingPointField(msg, 10)) == null ? undefined : f,
    mirroringcommission: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    guaranteedstoploss: (f = jspb.Message.getBooleanField(msg, 12)) == null ? undefined : f,
    usedmargin: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    stoplosstriggermethod: jspb.Message.getFieldWithDefault(msg, 14, 1),
    moneydigits: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoOAPosition}
 */
proto.ProtoOAPosition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoOAPosition;
  return proto.ProtoOAPosition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoOAPosition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoOAPosition}
 */
proto.ProtoOAPosition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPositionid(value);
      break;
    case 2:
      var value = new proto.ProtoOATradeData;
      reader.readMessage(value,proto.ProtoOATradeData.deserializeBinaryFromReader);
      msg.setTradedata(value);
      break;
    case 3:
      var value = /** @type {!proto.ProtoOAPositionStatus} */ (reader.readEnum());
      msg.setPositionstatus(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSwap(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStoploss(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTakeprofit(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUtclastupdatetimestamp(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCommission(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMarginrate(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMirroringcommission(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGuaranteedstoploss(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUsedmargin(value);
      break;
    case 14:
      var value = /** @type {!proto.ProtoOAOrderTriggerMethod} */ (reader.readEnum());
      msg.setStoplosstriggermethod(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMoneydigits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoOAPosition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoOAPosition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoOAPosition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOAPosition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTradedata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ProtoOATradeData.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.ProtoOAPositionStatus} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = /** @type {!proto.ProtoOAOrderTriggerMethod} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeEnum(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
};


/**
 * required int64 positionId = 1;
 * @return {number}
 */
proto.ProtoOAPosition.prototype.getPositionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.setPositionid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.clearPositionid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAPosition.prototype.hasPositionid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required ProtoOATradeData tradeData = 2;
 * @return {!proto.ProtoOATradeData}
 */
proto.ProtoOAPosition.prototype.getTradedata = function() {
  return /** @type{!proto.ProtoOATradeData} */ (
    jspb.Message.getWrapperField(this, proto.ProtoOATradeData, 2, 1));
};


/**
 * @param {!proto.ProtoOATradeData} value
 * @return {!proto.ProtoOAPosition} returns this
*/
proto.ProtoOAPosition.prototype.setTradedata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.clearTradedata = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAPosition.prototype.hasTradedata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required ProtoOAPositionStatus positionStatus = 3;
 * @return {!proto.ProtoOAPositionStatus}
 */
proto.ProtoOAPosition.prototype.getPositionstatus = function() {
  return /** @type {!proto.ProtoOAPositionStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 1));
};


/**
 * @param {!proto.ProtoOAPositionStatus} value
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.setPositionstatus = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.clearPositionstatus = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAPosition.prototype.hasPositionstatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required int64 swap = 4;
 * @return {number}
 */
proto.ProtoOAPosition.prototype.getSwap = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.setSwap = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.clearSwap = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAPosition.prototype.hasSwap = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double price = 5;
 * @return {number}
 */
proto.ProtoOAPosition.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.setPrice = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.clearPrice = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAPosition.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double stopLoss = 6;
 * @return {number}
 */
proto.ProtoOAPosition.prototype.getStoploss = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.setStoploss = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.clearStoploss = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAPosition.prototype.hasStoploss = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double takeProfit = 7;
 * @return {number}
 */
proto.ProtoOAPosition.prototype.getTakeprofit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.setTakeprofit = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.clearTakeprofit = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAPosition.prototype.hasTakeprofit = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int64 utcLastUpdateTimestamp = 8;
 * @return {number}
 */
proto.ProtoOAPosition.prototype.getUtclastupdatetimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.setUtclastupdatetimestamp = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.clearUtclastupdatetimestamp = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAPosition.prototype.hasUtclastupdatetimestamp = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int64 commission = 9;
 * @return {number}
 */
proto.ProtoOAPosition.prototype.getCommission = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.setCommission = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.clearCommission = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAPosition.prototype.hasCommission = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional double marginRate = 10;
 * @return {number}
 */
proto.ProtoOAPosition.prototype.getMarginrate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.setMarginrate = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.clearMarginrate = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAPosition.prototype.hasMarginrate = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int64 mirroringCommission = 11;
 * @return {number}
 */
proto.ProtoOAPosition.prototype.getMirroringcommission = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.setMirroringcommission = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.clearMirroringcommission = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAPosition.prototype.hasMirroringcommission = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool guaranteedStopLoss = 12;
 * @return {boolean}
 */
proto.ProtoOAPosition.prototype.getGuaranteedstoploss = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.setGuaranteedstoploss = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.clearGuaranteedstoploss = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAPosition.prototype.hasGuaranteedstoploss = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint64 usedMargin = 13;
 * @return {number}
 */
proto.ProtoOAPosition.prototype.getUsedmargin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.setUsedmargin = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.clearUsedmargin = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAPosition.prototype.hasUsedmargin = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional ProtoOAOrderTriggerMethod stopLossTriggerMethod = 14;
 * @return {!proto.ProtoOAOrderTriggerMethod}
 */
proto.ProtoOAPosition.prototype.getStoplosstriggermethod = function() {
  return /** @type {!proto.ProtoOAOrderTriggerMethod} */ (jspb.Message.getFieldWithDefault(this, 14, 1));
};


/**
 * @param {!proto.ProtoOAOrderTriggerMethod} value
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.setStoplosstriggermethod = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.clearStoplosstriggermethod = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAPosition.prototype.hasStoplosstriggermethod = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 moneyDigits = 15;
 * @return {number}
 */
proto.ProtoOAPosition.prototype.getMoneydigits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.setMoneydigits = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAPosition} returns this
 */
proto.ProtoOAPosition.prototype.clearMoneydigits = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAPosition.prototype.hasMoneydigits = function() {
  return jspb.Message.getField(this, 15) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoOATradeData.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoOATradeData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoOATradeData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOATradeData.toObject = function(includeInstance, msg) {
  var f, obj = {
    symbolid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    volume: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    tradeside: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    opentimestamp: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    label: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    guaranteedstoploss: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoOATradeData}
 */
proto.ProtoOATradeData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoOATradeData;
  return proto.ProtoOATradeData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoOATradeData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoOATradeData}
 */
proto.ProtoOATradeData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSymbolid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVolume(value);
      break;
    case 3:
      var value = /** @type {!proto.ProtoOATradeSide} */ (reader.readEnum());
      msg.setTradeside(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOpentimestamp(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGuaranteedstoploss(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoOATradeData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoOATradeData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoOATradeData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOATradeData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {!proto.ProtoOATradeSide} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * required int64 symbolId = 1;
 * @return {number}
 */
proto.ProtoOATradeData.prototype.getSymbolid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOATradeData} returns this
 */
proto.ProtoOATradeData.prototype.setSymbolid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATradeData} returns this
 */
proto.ProtoOATradeData.prototype.clearSymbolid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATradeData.prototype.hasSymbolid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int64 volume = 2;
 * @return {number}
 */
proto.ProtoOATradeData.prototype.getVolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOATradeData} returns this
 */
proto.ProtoOATradeData.prototype.setVolume = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATradeData} returns this
 */
proto.ProtoOATradeData.prototype.clearVolume = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATradeData.prototype.hasVolume = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required ProtoOATradeSide tradeSide = 3;
 * @return {!proto.ProtoOATradeSide}
 */
proto.ProtoOATradeData.prototype.getTradeside = function() {
  return /** @type {!proto.ProtoOATradeSide} */ (jspb.Message.getFieldWithDefault(this, 3, 1));
};


/**
 * @param {!proto.ProtoOATradeSide} value
 * @return {!proto.ProtoOATradeData} returns this
 */
proto.ProtoOATradeData.prototype.setTradeside = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATradeData} returns this
 */
proto.ProtoOATradeData.prototype.clearTradeside = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATradeData.prototype.hasTradeside = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 openTimestamp = 4;
 * @return {number}
 */
proto.ProtoOATradeData.prototype.getOpentimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOATradeData} returns this
 */
proto.ProtoOATradeData.prototype.setOpentimestamp = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATradeData} returns this
 */
proto.ProtoOATradeData.prototype.clearOpentimestamp = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATradeData.prototype.hasOpentimestamp = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string label = 5;
 * @return {string}
 */
proto.ProtoOATradeData.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ProtoOATradeData} returns this
 */
proto.ProtoOATradeData.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATradeData} returns this
 */
proto.ProtoOATradeData.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATradeData.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool guaranteedStopLoss = 6;
 * @return {boolean}
 */
proto.ProtoOATradeData.prototype.getGuaranteedstoploss = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ProtoOATradeData} returns this
 */
proto.ProtoOATradeData.prototype.setGuaranteedstoploss = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATradeData} returns this
 */
proto.ProtoOATradeData.prototype.clearGuaranteedstoploss = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATradeData.prototype.hasGuaranteedstoploss = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoOAOrder.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoOAOrder.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoOAOrder} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOAOrder.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    tradedata: (f = msg.getTradedata()) && proto.ProtoOATradeData.toObject(includeInstance, f),
    ordertype: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    orderstatus: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    expirationtimestamp: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    executionprice: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    executedvolume: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    utclastupdatetimestamp: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    baseslippageprice: (f = jspb.Message.getOptionalFloatingPointField(msg, 10)) == null ? undefined : f,
    slippageinpoints: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    closingorder: (f = jspb.Message.getBooleanField(msg, 12)) == null ? undefined : f,
    limitprice: (f = jspb.Message.getOptionalFloatingPointField(msg, 13)) == null ? undefined : f,
    stopprice: (f = jspb.Message.getOptionalFloatingPointField(msg, 14)) == null ? undefined : f,
    stoploss: (f = jspb.Message.getOptionalFloatingPointField(msg, 15)) == null ? undefined : f,
    takeprofit: (f = jspb.Message.getOptionalFloatingPointField(msg, 16)) == null ? undefined : f,
    clientorderid: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    timeinforce: jspb.Message.getFieldWithDefault(msg, 18, 3),
    positionid: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f,
    relativestoploss: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,
    relativetakeprofit: (f = jspb.Message.getField(msg, 21)) == null ? undefined : f,
    isstopout: (f = jspb.Message.getBooleanField(msg, 22)) == null ? undefined : f,
    trailingstoploss: (f = jspb.Message.getBooleanField(msg, 23)) == null ? undefined : f,
    stoptriggermethod: jspb.Message.getFieldWithDefault(msg, 24, 1),
    moneydigits: (f = jspb.Message.getField(msg, 25)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoOAOrder}
 */
proto.ProtoOAOrder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoOAOrder;
  return proto.ProtoOAOrder.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoOAOrder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoOAOrder}
 */
proto.ProtoOAOrder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOrderid(value);
      break;
    case 2:
      var value = new proto.ProtoOATradeData;
      reader.readMessage(value,proto.ProtoOATradeData.deserializeBinaryFromReader);
      msg.setTradedata(value);
      break;
    case 3:
      var value = /** @type {!proto.ProtoOAOrderType} */ (reader.readEnum());
      msg.setOrdertype(value);
      break;
    case 4:
      var value = /** @type {!proto.ProtoOAOrderStatus} */ (reader.readEnum());
      msg.setOrderstatus(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpirationtimestamp(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setExecutionprice(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExecutedvolume(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUtclastupdatetimestamp(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBaseslippageprice(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSlippageinpoints(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setClosingorder(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLimitprice(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStopprice(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStoploss(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTakeprofit(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientorderid(value);
      break;
    case 18:
      var value = /** @type {!proto.ProtoOATimeInForce} */ (reader.readEnum());
      msg.setTimeinforce(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPositionid(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRelativestoploss(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRelativetakeprofit(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsstopout(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTrailingstoploss(value);
      break;
    case 24:
      var value = /** @type {!proto.ProtoOAOrderTriggerMethod} */ (reader.readEnum());
      msg.setStoptriggermethod(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMoneydigits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoOAOrder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoOAOrder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoOAOrder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOAOrder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTradedata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ProtoOATradeData.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.ProtoOAOrderType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {!proto.ProtoOAOrderStatus} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeDouble(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeDouble(
      16,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
  f = /** @type {!proto.ProtoOATimeInForce} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeEnum(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeInt64(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeInt64(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeInt64(
      21,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeBool(
      22,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeBool(
      23,
      f
    );
  }
  f = /** @type {!proto.ProtoOAOrderTriggerMethod} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeEnum(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeUint32(
      25,
      f
    );
  }
};


/**
 * required int64 orderId = 1;
 * @return {number}
 */
proto.ProtoOAOrder.prototype.getOrderid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.setOrderid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.clearOrderid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.hasOrderid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required ProtoOATradeData tradeData = 2;
 * @return {!proto.ProtoOATradeData}
 */
proto.ProtoOAOrder.prototype.getTradedata = function() {
  return /** @type{!proto.ProtoOATradeData} */ (
    jspb.Message.getWrapperField(this, proto.ProtoOATradeData, 2, 1));
};


/**
 * @param {!proto.ProtoOATradeData} value
 * @return {!proto.ProtoOAOrder} returns this
*/
proto.ProtoOAOrder.prototype.setTradedata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.clearTradedata = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.hasTradedata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required ProtoOAOrderType orderType = 3;
 * @return {!proto.ProtoOAOrderType}
 */
proto.ProtoOAOrder.prototype.getOrdertype = function() {
  return /** @type {!proto.ProtoOAOrderType} */ (jspb.Message.getFieldWithDefault(this, 3, 1));
};


/**
 * @param {!proto.ProtoOAOrderType} value
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.setOrdertype = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.clearOrdertype = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.hasOrdertype = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required ProtoOAOrderStatus orderStatus = 4;
 * @return {!proto.ProtoOAOrderStatus}
 */
proto.ProtoOAOrder.prototype.getOrderstatus = function() {
  return /** @type {!proto.ProtoOAOrderStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 1));
};


/**
 * @param {!proto.ProtoOAOrderStatus} value
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.setOrderstatus = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.clearOrderstatus = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.hasOrderstatus = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 expirationTimestamp = 6;
 * @return {number}
 */
proto.ProtoOAOrder.prototype.getExpirationtimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.setExpirationtimestamp = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.clearExpirationtimestamp = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.hasExpirationtimestamp = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double executionPrice = 7;
 * @return {number}
 */
proto.ProtoOAOrder.prototype.getExecutionprice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.setExecutionprice = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.clearExecutionprice = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.hasExecutionprice = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int64 executedVolume = 8;
 * @return {number}
 */
proto.ProtoOAOrder.prototype.getExecutedvolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.setExecutedvolume = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.clearExecutedvolume = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.hasExecutedvolume = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int64 utcLastUpdateTimestamp = 9;
 * @return {number}
 */
proto.ProtoOAOrder.prototype.getUtclastupdatetimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.setUtclastupdatetimestamp = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.clearUtclastupdatetimestamp = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.hasUtclastupdatetimestamp = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional double baseSlippagePrice = 10;
 * @return {number}
 */
proto.ProtoOAOrder.prototype.getBaseslippageprice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.setBaseslippageprice = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.clearBaseslippageprice = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.hasBaseslippageprice = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int64 slippageInPoints = 11;
 * @return {number}
 */
proto.ProtoOAOrder.prototype.getSlippageinpoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.setSlippageinpoints = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.clearSlippageinpoints = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.hasSlippageinpoints = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool closingOrder = 12;
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.getClosingorder = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.setClosingorder = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.clearClosingorder = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.hasClosingorder = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional double limitPrice = 13;
 * @return {number}
 */
proto.ProtoOAOrder.prototype.getLimitprice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.setLimitprice = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.clearLimitprice = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.hasLimitprice = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional double stopPrice = 14;
 * @return {number}
 */
proto.ProtoOAOrder.prototype.getStopprice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.setStopprice = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.clearStopprice = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.hasStopprice = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional double stopLoss = 15;
 * @return {number}
 */
proto.ProtoOAOrder.prototype.getStoploss = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.setStoploss = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.clearStoploss = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.hasStoploss = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional double takeProfit = 16;
 * @return {number}
 */
proto.ProtoOAOrder.prototype.getTakeprofit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.setTakeprofit = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.clearTakeprofit = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.hasTakeprofit = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string clientOrderId = 17;
 * @return {string}
 */
proto.ProtoOAOrder.prototype.getClientorderid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.setClientorderid = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.clearClientorderid = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.hasClientorderid = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional ProtoOATimeInForce timeInForce = 18;
 * @return {!proto.ProtoOATimeInForce}
 */
proto.ProtoOAOrder.prototype.getTimeinforce = function() {
  return /** @type {!proto.ProtoOATimeInForce} */ (jspb.Message.getFieldWithDefault(this, 18, 3));
};


/**
 * @param {!proto.ProtoOATimeInForce} value
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.setTimeinforce = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.clearTimeinforce = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.hasTimeinforce = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional int64 positionId = 19;
 * @return {number}
 */
proto.ProtoOAOrder.prototype.getPositionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.setPositionid = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.clearPositionid = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.hasPositionid = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional int64 relativeStopLoss = 20;
 * @return {number}
 */
proto.ProtoOAOrder.prototype.getRelativestoploss = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.setRelativestoploss = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.clearRelativestoploss = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.hasRelativestoploss = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional int64 relativeTakeProfit = 21;
 * @return {number}
 */
proto.ProtoOAOrder.prototype.getRelativetakeprofit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.setRelativetakeprofit = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.clearRelativetakeprofit = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.hasRelativetakeprofit = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional bool isStopOut = 22;
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.getIsstopout = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.setIsstopout = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.clearIsstopout = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.hasIsstopout = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional bool trailingStopLoss = 23;
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.getTrailingstoploss = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.setTrailingstoploss = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.clearTrailingstoploss = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.hasTrailingstoploss = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional ProtoOAOrderTriggerMethod stopTriggerMethod = 24;
 * @return {!proto.ProtoOAOrderTriggerMethod}
 */
proto.ProtoOAOrder.prototype.getStoptriggermethod = function() {
  return /** @type {!proto.ProtoOAOrderTriggerMethod} */ (jspb.Message.getFieldWithDefault(this, 24, 1));
};


/**
 * @param {!proto.ProtoOAOrderTriggerMethod} value
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.setStoptriggermethod = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.clearStoptriggermethod = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.hasStoptriggermethod = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional uint32 moneyDigits = 25;
 * @return {number}
 */
proto.ProtoOAOrder.prototype.getMoneydigits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.setMoneydigits = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAOrder} returns this
 */
proto.ProtoOAOrder.prototype.clearMoneydigits = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAOrder.prototype.hasMoneydigits = function() {
  return jspb.Message.getField(this, 25) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoOABonusDepositWithdraw.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoOABonusDepositWithdraw.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoOABonusDepositWithdraw} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOABonusDepositWithdraw.toObject = function(includeInstance, msg) {
  var f, obj = {
    operationtype: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    bonushistoryid: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    managerbonus: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    managerdelta: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    ibbonus: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    ibdelta: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    changebonustimestamp: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    externalnote: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    introducingbrokerid: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    moneydigits: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoOABonusDepositWithdraw}
 */
proto.ProtoOABonusDepositWithdraw.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoOABonusDepositWithdraw;
  return proto.ProtoOABonusDepositWithdraw.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoOABonusDepositWithdraw} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoOABonusDepositWithdraw}
 */
proto.ProtoOABonusDepositWithdraw.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ProtoOAChangeBonusType} */ (reader.readEnum());
      msg.setOperationtype(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBonushistoryid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setManagerbonus(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setManagerdelta(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIbbonus(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIbdelta(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setChangebonustimestamp(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalnote(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIntroducingbrokerid(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMoneydigits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoOABonusDepositWithdraw.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoOABonusDepositWithdraw.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoOABonusDepositWithdraw} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOABonusDepositWithdraw.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ProtoOAChangeBonusType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
};


/**
 * required ProtoOAChangeBonusType operationType = 1;
 * @return {!proto.ProtoOAChangeBonusType}
 */
proto.ProtoOABonusDepositWithdraw.prototype.getOperationtype = function() {
  return /** @type {!proto.ProtoOAChangeBonusType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ProtoOAChangeBonusType} value
 * @return {!proto.ProtoOABonusDepositWithdraw} returns this
 */
proto.ProtoOABonusDepositWithdraw.prototype.setOperationtype = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOABonusDepositWithdraw} returns this
 */
proto.ProtoOABonusDepositWithdraw.prototype.clearOperationtype = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOABonusDepositWithdraw.prototype.hasOperationtype = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int64 bonusHistoryId = 2;
 * @return {number}
 */
proto.ProtoOABonusDepositWithdraw.prototype.getBonushistoryid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOABonusDepositWithdraw} returns this
 */
proto.ProtoOABonusDepositWithdraw.prototype.setBonushistoryid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOABonusDepositWithdraw} returns this
 */
proto.ProtoOABonusDepositWithdraw.prototype.clearBonushistoryid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOABonusDepositWithdraw.prototype.hasBonushistoryid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required int64 managerBonus = 3;
 * @return {number}
 */
proto.ProtoOABonusDepositWithdraw.prototype.getManagerbonus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOABonusDepositWithdraw} returns this
 */
proto.ProtoOABonusDepositWithdraw.prototype.setManagerbonus = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOABonusDepositWithdraw} returns this
 */
proto.ProtoOABonusDepositWithdraw.prototype.clearManagerbonus = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOABonusDepositWithdraw.prototype.hasManagerbonus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required int64 managerDelta = 4;
 * @return {number}
 */
proto.ProtoOABonusDepositWithdraw.prototype.getManagerdelta = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOABonusDepositWithdraw} returns this
 */
proto.ProtoOABonusDepositWithdraw.prototype.setManagerdelta = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOABonusDepositWithdraw} returns this
 */
proto.ProtoOABonusDepositWithdraw.prototype.clearManagerdelta = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOABonusDepositWithdraw.prototype.hasManagerdelta = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * required int64 ibBonus = 5;
 * @return {number}
 */
proto.ProtoOABonusDepositWithdraw.prototype.getIbbonus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOABonusDepositWithdraw} returns this
 */
proto.ProtoOABonusDepositWithdraw.prototype.setIbbonus = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOABonusDepositWithdraw} returns this
 */
proto.ProtoOABonusDepositWithdraw.prototype.clearIbbonus = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOABonusDepositWithdraw.prototype.hasIbbonus = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * required int64 ibDelta = 6;
 * @return {number}
 */
proto.ProtoOABonusDepositWithdraw.prototype.getIbdelta = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOABonusDepositWithdraw} returns this
 */
proto.ProtoOABonusDepositWithdraw.prototype.setIbdelta = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOABonusDepositWithdraw} returns this
 */
proto.ProtoOABonusDepositWithdraw.prototype.clearIbdelta = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOABonusDepositWithdraw.prototype.hasIbdelta = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * required int64 changeBonusTimestamp = 7;
 * @return {number}
 */
proto.ProtoOABonusDepositWithdraw.prototype.getChangebonustimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOABonusDepositWithdraw} returns this
 */
proto.ProtoOABonusDepositWithdraw.prototype.setChangebonustimestamp = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOABonusDepositWithdraw} returns this
 */
proto.ProtoOABonusDepositWithdraw.prototype.clearChangebonustimestamp = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOABonusDepositWithdraw.prototype.hasChangebonustimestamp = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string externalNote = 8;
 * @return {string}
 */
proto.ProtoOABonusDepositWithdraw.prototype.getExternalnote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ProtoOABonusDepositWithdraw} returns this
 */
proto.ProtoOABonusDepositWithdraw.prototype.setExternalnote = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOABonusDepositWithdraw} returns this
 */
proto.ProtoOABonusDepositWithdraw.prototype.clearExternalnote = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOABonusDepositWithdraw.prototype.hasExternalnote = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int64 introducingBrokerId = 9;
 * @return {number}
 */
proto.ProtoOABonusDepositWithdraw.prototype.getIntroducingbrokerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOABonusDepositWithdraw} returns this
 */
proto.ProtoOABonusDepositWithdraw.prototype.setIntroducingbrokerid = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOABonusDepositWithdraw} returns this
 */
proto.ProtoOABonusDepositWithdraw.prototype.clearIntroducingbrokerid = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOABonusDepositWithdraw.prototype.hasIntroducingbrokerid = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 moneyDigits = 10;
 * @return {number}
 */
proto.ProtoOABonusDepositWithdraw.prototype.getMoneydigits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOABonusDepositWithdraw} returns this
 */
proto.ProtoOABonusDepositWithdraw.prototype.setMoneydigits = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOABonusDepositWithdraw} returns this
 */
proto.ProtoOABonusDepositWithdraw.prototype.clearMoneydigits = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOABonusDepositWithdraw.prototype.hasMoneydigits = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoOADepositWithdraw.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoOADepositWithdraw.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoOADepositWithdraw} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOADepositWithdraw.toObject = function(includeInstance, msg) {
  var f, obj = {
    operationtype: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    balancehistoryid: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    balance: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    delta: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    changebalancetimestamp: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    externalnote: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    balanceversion: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    equity: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    moneydigits: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoOADepositWithdraw}
 */
proto.ProtoOADepositWithdraw.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoOADepositWithdraw;
  return proto.ProtoOADepositWithdraw.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoOADepositWithdraw} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoOADepositWithdraw}
 */
proto.ProtoOADepositWithdraw.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ProtoOAChangeBalanceType} */ (reader.readEnum());
      msg.setOperationtype(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBalancehistoryid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBalance(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDelta(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setChangebalancetimestamp(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalnote(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBalanceversion(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEquity(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMoneydigits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoOADepositWithdraw.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoOADepositWithdraw.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoOADepositWithdraw} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOADepositWithdraw.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ProtoOAChangeBalanceType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
};


/**
 * required ProtoOAChangeBalanceType operationType = 1;
 * @return {!proto.ProtoOAChangeBalanceType}
 */
proto.ProtoOADepositWithdraw.prototype.getOperationtype = function() {
  return /** @type {!proto.ProtoOAChangeBalanceType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ProtoOAChangeBalanceType} value
 * @return {!proto.ProtoOADepositWithdraw} returns this
 */
proto.ProtoOADepositWithdraw.prototype.setOperationtype = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADepositWithdraw} returns this
 */
proto.ProtoOADepositWithdraw.prototype.clearOperationtype = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADepositWithdraw.prototype.hasOperationtype = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int64 balanceHistoryId = 2;
 * @return {number}
 */
proto.ProtoOADepositWithdraw.prototype.getBalancehistoryid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADepositWithdraw} returns this
 */
proto.ProtoOADepositWithdraw.prototype.setBalancehistoryid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADepositWithdraw} returns this
 */
proto.ProtoOADepositWithdraw.prototype.clearBalancehistoryid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADepositWithdraw.prototype.hasBalancehistoryid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required int64 balance = 3;
 * @return {number}
 */
proto.ProtoOADepositWithdraw.prototype.getBalance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADepositWithdraw} returns this
 */
proto.ProtoOADepositWithdraw.prototype.setBalance = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADepositWithdraw} returns this
 */
proto.ProtoOADepositWithdraw.prototype.clearBalance = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADepositWithdraw.prototype.hasBalance = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required int64 delta = 4;
 * @return {number}
 */
proto.ProtoOADepositWithdraw.prototype.getDelta = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADepositWithdraw} returns this
 */
proto.ProtoOADepositWithdraw.prototype.setDelta = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADepositWithdraw} returns this
 */
proto.ProtoOADepositWithdraw.prototype.clearDelta = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADepositWithdraw.prototype.hasDelta = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * required int64 changeBalanceTimestamp = 5;
 * @return {number}
 */
proto.ProtoOADepositWithdraw.prototype.getChangebalancetimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADepositWithdraw} returns this
 */
proto.ProtoOADepositWithdraw.prototype.setChangebalancetimestamp = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADepositWithdraw} returns this
 */
proto.ProtoOADepositWithdraw.prototype.clearChangebalancetimestamp = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADepositWithdraw.prototype.hasChangebalancetimestamp = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string externalNote = 6;
 * @return {string}
 */
proto.ProtoOADepositWithdraw.prototype.getExternalnote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ProtoOADepositWithdraw} returns this
 */
proto.ProtoOADepositWithdraw.prototype.setExternalnote = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADepositWithdraw} returns this
 */
proto.ProtoOADepositWithdraw.prototype.clearExternalnote = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADepositWithdraw.prototype.hasExternalnote = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int64 balanceVersion = 7;
 * @return {number}
 */
proto.ProtoOADepositWithdraw.prototype.getBalanceversion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADepositWithdraw} returns this
 */
proto.ProtoOADepositWithdraw.prototype.setBalanceversion = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADepositWithdraw} returns this
 */
proto.ProtoOADepositWithdraw.prototype.clearBalanceversion = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADepositWithdraw.prototype.hasBalanceversion = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int64 equity = 8;
 * @return {number}
 */
proto.ProtoOADepositWithdraw.prototype.getEquity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADepositWithdraw} returns this
 */
proto.ProtoOADepositWithdraw.prototype.setEquity = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADepositWithdraw} returns this
 */
proto.ProtoOADepositWithdraw.prototype.clearEquity = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADepositWithdraw.prototype.hasEquity = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 moneyDigits = 9;
 * @return {number}
 */
proto.ProtoOADepositWithdraw.prototype.getMoneydigits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADepositWithdraw} returns this
 */
proto.ProtoOADepositWithdraw.prototype.setMoneydigits = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADepositWithdraw} returns this
 */
proto.ProtoOADepositWithdraw.prototype.clearMoneydigits = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADepositWithdraw.prototype.hasMoneydigits = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoOADeal.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoOADeal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoOADeal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOADeal.toObject = function(includeInstance, msg) {
  var f, obj = {
    dealid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    orderid: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    positionid: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    volume: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    filledvolume: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    symbolid: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    createtimestamp: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    executiontimestamp: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    utclastupdatetimestamp: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    executionprice: (f = jspb.Message.getOptionalFloatingPointField(msg, 10)) == null ? undefined : f,
    tradeside: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    dealstatus: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    marginrate: (f = jspb.Message.getOptionalFloatingPointField(msg, 13)) == null ? undefined : f,
    commission: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    basetousdconversionrate: (f = jspb.Message.getOptionalFloatingPointField(msg, 15)) == null ? undefined : f,
    closepositiondetail: (f = msg.getClosepositiondetail()) && proto.ProtoOAClosePositionDetail.toObject(includeInstance, f),
    moneydigits: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoOADeal}
 */
proto.ProtoOADeal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoOADeal;
  return proto.ProtoOADeal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoOADeal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoOADeal}
 */
proto.ProtoOADeal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDealid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOrderid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPositionid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVolume(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFilledvolume(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSymbolid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatetimestamp(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExecutiontimestamp(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUtclastupdatetimestamp(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setExecutionprice(value);
      break;
    case 11:
      var value = /** @type {!proto.ProtoOATradeSide} */ (reader.readEnum());
      msg.setTradeside(value);
      break;
    case 12:
      var value = /** @type {!proto.ProtoOADealStatus} */ (reader.readEnum());
      msg.setDealstatus(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMarginrate(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCommission(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBasetousdconversionrate(value);
      break;
    case 16:
      var value = new proto.ProtoOAClosePositionDetail;
      reader.readMessage(value,proto.ProtoOAClosePositionDetail.deserializeBinaryFromReader);
      msg.setClosepositiondetail(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMoneydigits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoOADeal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoOADeal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoOADeal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOADeal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = /** @type {!proto.ProtoOATradeSide} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = /** @type {!proto.ProtoOADealStatus} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeDouble(
      15,
      f
    );
  }
  f = message.getClosepositiondetail();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.ProtoOAClosePositionDetail.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint32(
      17,
      f
    );
  }
};


/**
 * required int64 dealId = 1;
 * @return {number}
 */
proto.ProtoOADeal.prototype.getDealid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.setDealid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.clearDealid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADeal.prototype.hasDealid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int64 orderId = 2;
 * @return {number}
 */
proto.ProtoOADeal.prototype.getOrderid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.setOrderid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.clearOrderid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADeal.prototype.hasOrderid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required int64 positionId = 3;
 * @return {number}
 */
proto.ProtoOADeal.prototype.getPositionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.setPositionid = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.clearPositionid = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADeal.prototype.hasPositionid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required int64 volume = 4;
 * @return {number}
 */
proto.ProtoOADeal.prototype.getVolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.setVolume = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.clearVolume = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADeal.prototype.hasVolume = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * required int64 filledVolume = 5;
 * @return {number}
 */
proto.ProtoOADeal.prototype.getFilledvolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.setFilledvolume = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.clearFilledvolume = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADeal.prototype.hasFilledvolume = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * required int64 symbolId = 6;
 * @return {number}
 */
proto.ProtoOADeal.prototype.getSymbolid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.setSymbolid = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.clearSymbolid = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADeal.prototype.hasSymbolid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * required int64 createTimestamp = 7;
 * @return {number}
 */
proto.ProtoOADeal.prototype.getCreatetimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.setCreatetimestamp = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.clearCreatetimestamp = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADeal.prototype.hasCreatetimestamp = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * required int64 executionTimestamp = 8;
 * @return {number}
 */
proto.ProtoOADeal.prototype.getExecutiontimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.setExecutiontimestamp = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.clearExecutiontimestamp = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADeal.prototype.hasExecutiontimestamp = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int64 utcLastUpdateTimestamp = 9;
 * @return {number}
 */
proto.ProtoOADeal.prototype.getUtclastupdatetimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.setUtclastupdatetimestamp = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.clearUtclastupdatetimestamp = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADeal.prototype.hasUtclastupdatetimestamp = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional double executionPrice = 10;
 * @return {number}
 */
proto.ProtoOADeal.prototype.getExecutionprice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.setExecutionprice = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.clearExecutionprice = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADeal.prototype.hasExecutionprice = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * required ProtoOATradeSide tradeSide = 11;
 * @return {!proto.ProtoOATradeSide}
 */
proto.ProtoOADeal.prototype.getTradeside = function() {
  return /** @type {!proto.ProtoOATradeSide} */ (jspb.Message.getFieldWithDefault(this, 11, 1));
};


/**
 * @param {!proto.ProtoOATradeSide} value
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.setTradeside = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.clearTradeside = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADeal.prototype.hasTradeside = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * required ProtoOADealStatus dealStatus = 12;
 * @return {!proto.ProtoOADealStatus}
 */
proto.ProtoOADeal.prototype.getDealstatus = function() {
  return /** @type {!proto.ProtoOADealStatus} */ (jspb.Message.getFieldWithDefault(this, 12, 2));
};


/**
 * @param {!proto.ProtoOADealStatus} value
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.setDealstatus = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.clearDealstatus = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADeal.prototype.hasDealstatus = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional double marginRate = 13;
 * @return {number}
 */
proto.ProtoOADeal.prototype.getMarginrate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.setMarginrate = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.clearMarginrate = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADeal.prototype.hasMarginrate = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional int64 commission = 14;
 * @return {number}
 */
proto.ProtoOADeal.prototype.getCommission = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.setCommission = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.clearCommission = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADeal.prototype.hasCommission = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional double baseToUsdConversionRate = 15;
 * @return {number}
 */
proto.ProtoOADeal.prototype.getBasetousdconversionrate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.setBasetousdconversionrate = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.clearBasetousdconversionrate = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADeal.prototype.hasBasetousdconversionrate = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional ProtoOAClosePositionDetail closePositionDetail = 16;
 * @return {?proto.ProtoOAClosePositionDetail}
 */
proto.ProtoOADeal.prototype.getClosepositiondetail = function() {
  return /** @type{?proto.ProtoOAClosePositionDetail} */ (
    jspb.Message.getWrapperField(this, proto.ProtoOAClosePositionDetail, 16));
};


/**
 * @param {?proto.ProtoOAClosePositionDetail|undefined} value
 * @return {!proto.ProtoOADeal} returns this
*/
proto.ProtoOADeal.prototype.setClosepositiondetail = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.clearClosepositiondetail = function() {
  return this.setClosepositiondetail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADeal.prototype.hasClosepositiondetail = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint32 moneyDigits = 17;
 * @return {number}
 */
proto.ProtoOADeal.prototype.getMoneydigits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.setMoneydigits = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADeal} returns this
 */
proto.ProtoOADeal.prototype.clearMoneydigits = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADeal.prototype.hasMoneydigits = function() {
  return jspb.Message.getField(this, 17) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoOAClosePositionDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoOAClosePositionDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoOAClosePositionDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOAClosePositionDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    entryprice: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    grossprofit: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    swap: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    commission: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    balance: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    quotetodepositconversionrate: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    closedvolume: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    balanceversion: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    moneydigits: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoOAClosePositionDetail}
 */
proto.ProtoOAClosePositionDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoOAClosePositionDetail;
  return proto.ProtoOAClosePositionDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoOAClosePositionDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoOAClosePositionDetail}
 */
proto.ProtoOAClosePositionDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEntryprice(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGrossprofit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSwap(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCommission(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBalance(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setQuotetodepositconversionrate(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClosedvolume(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBalanceversion(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMoneydigits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoOAClosePositionDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoOAClosePositionDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoOAClosePositionDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOAClosePositionDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
};


/**
 * required double entryPrice = 1;
 * @return {number}
 */
proto.ProtoOAClosePositionDetail.prototype.getEntryprice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAClosePositionDetail} returns this
 */
proto.ProtoOAClosePositionDetail.prototype.setEntryprice = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAClosePositionDetail} returns this
 */
proto.ProtoOAClosePositionDetail.prototype.clearEntryprice = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAClosePositionDetail.prototype.hasEntryprice = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int64 grossProfit = 2;
 * @return {number}
 */
proto.ProtoOAClosePositionDetail.prototype.getGrossprofit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAClosePositionDetail} returns this
 */
proto.ProtoOAClosePositionDetail.prototype.setGrossprofit = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAClosePositionDetail} returns this
 */
proto.ProtoOAClosePositionDetail.prototype.clearGrossprofit = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAClosePositionDetail.prototype.hasGrossprofit = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required int64 swap = 3;
 * @return {number}
 */
proto.ProtoOAClosePositionDetail.prototype.getSwap = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAClosePositionDetail} returns this
 */
proto.ProtoOAClosePositionDetail.prototype.setSwap = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAClosePositionDetail} returns this
 */
proto.ProtoOAClosePositionDetail.prototype.clearSwap = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAClosePositionDetail.prototype.hasSwap = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required int64 commission = 4;
 * @return {number}
 */
proto.ProtoOAClosePositionDetail.prototype.getCommission = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAClosePositionDetail} returns this
 */
proto.ProtoOAClosePositionDetail.prototype.setCommission = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAClosePositionDetail} returns this
 */
proto.ProtoOAClosePositionDetail.prototype.clearCommission = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAClosePositionDetail.prototype.hasCommission = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * required int64 balance = 5;
 * @return {number}
 */
proto.ProtoOAClosePositionDetail.prototype.getBalance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAClosePositionDetail} returns this
 */
proto.ProtoOAClosePositionDetail.prototype.setBalance = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAClosePositionDetail} returns this
 */
proto.ProtoOAClosePositionDetail.prototype.clearBalance = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAClosePositionDetail.prototype.hasBalance = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double quoteToDepositConversionRate = 6;
 * @return {number}
 */
proto.ProtoOAClosePositionDetail.prototype.getQuotetodepositconversionrate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAClosePositionDetail} returns this
 */
proto.ProtoOAClosePositionDetail.prototype.setQuotetodepositconversionrate = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAClosePositionDetail} returns this
 */
proto.ProtoOAClosePositionDetail.prototype.clearQuotetodepositconversionrate = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAClosePositionDetail.prototype.hasQuotetodepositconversionrate = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int64 closedVolume = 7;
 * @return {number}
 */
proto.ProtoOAClosePositionDetail.prototype.getClosedvolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAClosePositionDetail} returns this
 */
proto.ProtoOAClosePositionDetail.prototype.setClosedvolume = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAClosePositionDetail} returns this
 */
proto.ProtoOAClosePositionDetail.prototype.clearClosedvolume = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAClosePositionDetail.prototype.hasClosedvolume = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int64 balanceVersion = 8;
 * @return {number}
 */
proto.ProtoOAClosePositionDetail.prototype.getBalanceversion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAClosePositionDetail} returns this
 */
proto.ProtoOAClosePositionDetail.prototype.setBalanceversion = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAClosePositionDetail} returns this
 */
proto.ProtoOAClosePositionDetail.prototype.clearBalanceversion = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAClosePositionDetail.prototype.hasBalanceversion = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 moneyDigits = 9;
 * @return {number}
 */
proto.ProtoOAClosePositionDetail.prototype.getMoneydigits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAClosePositionDetail} returns this
 */
proto.ProtoOAClosePositionDetail.prototype.setMoneydigits = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAClosePositionDetail} returns this
 */
proto.ProtoOAClosePositionDetail.prototype.clearMoneydigits = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAClosePositionDetail.prototype.hasMoneydigits = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoOATrendbar.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoOATrendbar.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoOATrendbar} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOATrendbar.toObject = function(includeInstance, msg) {
  var f, obj = {
    volume: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    period: jspb.Message.getFieldWithDefault(msg, 4, 1),
    low: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    deltaopen: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    deltaclose: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    deltahigh: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    utctimestampinminutes: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoOATrendbar}
 */
proto.ProtoOATrendbar.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoOATrendbar;
  return proto.ProtoOATrendbar.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoOATrendbar} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoOATrendbar}
 */
proto.ProtoOATrendbar.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVolume(value);
      break;
    case 4:
      var value = /** @type {!proto.ProtoOATrendbarPeriod} */ (reader.readEnum());
      msg.setPeriod(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLow(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDeltaopen(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDeltaclose(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDeltahigh(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUtctimestampinminutes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoOATrendbar.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoOATrendbar.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoOATrendbar} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOATrendbar.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {!proto.ProtoOATrendbarPeriod} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
};


/**
 * required int64 volume = 3;
 * @return {number}
 */
proto.ProtoOATrendbar.prototype.getVolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOATrendbar} returns this
 */
proto.ProtoOATrendbar.prototype.setVolume = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrendbar} returns this
 */
proto.ProtoOATrendbar.prototype.clearVolume = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrendbar.prototype.hasVolume = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ProtoOATrendbarPeriod period = 4;
 * @return {!proto.ProtoOATrendbarPeriod}
 */
proto.ProtoOATrendbar.prototype.getPeriod = function() {
  return /** @type {!proto.ProtoOATrendbarPeriod} */ (jspb.Message.getFieldWithDefault(this, 4, 1));
};


/**
 * @param {!proto.ProtoOATrendbarPeriod} value
 * @return {!proto.ProtoOATrendbar} returns this
 */
proto.ProtoOATrendbar.prototype.setPeriod = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrendbar} returns this
 */
proto.ProtoOATrendbar.prototype.clearPeriod = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrendbar.prototype.hasPeriod = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 low = 5;
 * @return {number}
 */
proto.ProtoOATrendbar.prototype.getLow = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOATrendbar} returns this
 */
proto.ProtoOATrendbar.prototype.setLow = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrendbar} returns this
 */
proto.ProtoOATrendbar.prototype.clearLow = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrendbar.prototype.hasLow = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 deltaOpen = 6;
 * @return {number}
 */
proto.ProtoOATrendbar.prototype.getDeltaopen = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOATrendbar} returns this
 */
proto.ProtoOATrendbar.prototype.setDeltaopen = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrendbar} returns this
 */
proto.ProtoOATrendbar.prototype.clearDeltaopen = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrendbar.prototype.hasDeltaopen = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 deltaClose = 7;
 * @return {number}
 */
proto.ProtoOATrendbar.prototype.getDeltaclose = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOATrendbar} returns this
 */
proto.ProtoOATrendbar.prototype.setDeltaclose = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrendbar} returns this
 */
proto.ProtoOATrendbar.prototype.clearDeltaclose = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrendbar.prototype.hasDeltaclose = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint64 deltaHigh = 8;
 * @return {number}
 */
proto.ProtoOATrendbar.prototype.getDeltahigh = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOATrendbar} returns this
 */
proto.ProtoOATrendbar.prototype.setDeltahigh = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrendbar} returns this
 */
proto.ProtoOATrendbar.prototype.clearDeltahigh = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrendbar.prototype.hasDeltahigh = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 utcTimestampInMinutes = 9;
 * @return {number}
 */
proto.ProtoOATrendbar.prototype.getUtctimestampinminutes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOATrendbar} returns this
 */
proto.ProtoOATrendbar.prototype.setUtctimestampinminutes = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATrendbar} returns this
 */
proto.ProtoOATrendbar.prototype.clearUtctimestampinminutes = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATrendbar.prototype.hasUtctimestampinminutes = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoOAExpectedMargin.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoOAExpectedMargin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoOAExpectedMargin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOAExpectedMargin.toObject = function(includeInstance, msg) {
  var f, obj = {
    volume: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    buymargin: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    sellmargin: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoOAExpectedMargin}
 */
proto.ProtoOAExpectedMargin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoOAExpectedMargin;
  return proto.ProtoOAExpectedMargin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoOAExpectedMargin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoOAExpectedMargin}
 */
proto.ProtoOAExpectedMargin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVolume(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBuymargin(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSellmargin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoOAExpectedMargin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoOAExpectedMargin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoOAExpectedMargin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOAExpectedMargin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * required int64 volume = 1;
 * @return {number}
 */
proto.ProtoOAExpectedMargin.prototype.getVolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAExpectedMargin} returns this
 */
proto.ProtoOAExpectedMargin.prototype.setVolume = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAExpectedMargin} returns this
 */
proto.ProtoOAExpectedMargin.prototype.clearVolume = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAExpectedMargin.prototype.hasVolume = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int64 buyMargin = 2;
 * @return {number}
 */
proto.ProtoOAExpectedMargin.prototype.getBuymargin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAExpectedMargin} returns this
 */
proto.ProtoOAExpectedMargin.prototype.setBuymargin = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAExpectedMargin} returns this
 */
proto.ProtoOAExpectedMargin.prototype.clearBuymargin = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAExpectedMargin.prototype.hasBuymargin = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required int64 sellMargin = 3;
 * @return {number}
 */
proto.ProtoOAExpectedMargin.prototype.getSellmargin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAExpectedMargin} returns this
 */
proto.ProtoOAExpectedMargin.prototype.setSellmargin = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAExpectedMargin} returns this
 */
proto.ProtoOAExpectedMargin.prototype.clearSellmargin = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAExpectedMargin.prototype.hasSellmargin = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoOATickData.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoOATickData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoOATickData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOATickData.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    tick: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoOATickData}
 */
proto.ProtoOATickData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoOATickData;
  return proto.ProtoOATickData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoOATickData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoOATickData}
 */
proto.ProtoOATickData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTick(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoOATickData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoOATickData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoOATickData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOATickData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * required int64 timestamp = 1;
 * @return {number}
 */
proto.ProtoOATickData.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOATickData} returns this
 */
proto.ProtoOATickData.prototype.setTimestamp = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATickData} returns this
 */
proto.ProtoOATickData.prototype.clearTimestamp = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATickData.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int64 tick = 2;
 * @return {number}
 */
proto.ProtoOATickData.prototype.getTick = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOATickData} returns this
 */
proto.ProtoOATickData.prototype.setTick = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOATickData} returns this
 */
proto.ProtoOATickData.prototype.clearTick = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOATickData.prototype.hasTick = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoOACtidProfile.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoOACtidProfile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoOACtidProfile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOACtidProfile.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoOACtidProfile}
 */
proto.ProtoOACtidProfile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoOACtidProfile;
  return proto.ProtoOACtidProfile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoOACtidProfile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoOACtidProfile}
 */
proto.ProtoOACtidProfile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoOACtidProfile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoOACtidProfile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoOACtidProfile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOACtidProfile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * required int64 userId = 1;
 * @return {number}
 */
proto.ProtoOACtidProfile.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOACtidProfile} returns this
 */
proto.ProtoOACtidProfile.prototype.setUserid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOACtidProfile} returns this
 */
proto.ProtoOACtidProfile.prototype.clearUserid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOACtidProfile.prototype.hasUserid = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoOACtidTraderAccount.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoOACtidTraderAccount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoOACtidTraderAccount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOACtidTraderAccount.toObject = function(includeInstance, msg) {
  var f, obj = {
    ctidtraderaccountid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    islive: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    traderlogin: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoOACtidTraderAccount}
 */
proto.ProtoOACtidTraderAccount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoOACtidTraderAccount;
  return proto.ProtoOACtidTraderAccount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoOACtidTraderAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoOACtidTraderAccount}
 */
proto.ProtoOACtidTraderAccount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCtidtraderaccountid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIslive(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTraderlogin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoOACtidTraderAccount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoOACtidTraderAccount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoOACtidTraderAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOACtidTraderAccount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * required uint64 ctidTraderAccountId = 1;
 * @return {number}
 */
proto.ProtoOACtidTraderAccount.prototype.getCtidtraderaccountid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOACtidTraderAccount} returns this
 */
proto.ProtoOACtidTraderAccount.prototype.setCtidtraderaccountid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOACtidTraderAccount} returns this
 */
proto.ProtoOACtidTraderAccount.prototype.clearCtidtraderaccountid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOACtidTraderAccount.prototype.hasCtidtraderaccountid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool isLive = 2;
 * @return {boolean}
 */
proto.ProtoOACtidTraderAccount.prototype.getIslive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ProtoOACtidTraderAccount} returns this
 */
proto.ProtoOACtidTraderAccount.prototype.setIslive = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOACtidTraderAccount} returns this
 */
proto.ProtoOACtidTraderAccount.prototype.clearIslive = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOACtidTraderAccount.prototype.hasIslive = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 traderLogin = 3;
 * @return {number}
 */
proto.ProtoOACtidTraderAccount.prototype.getTraderlogin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOACtidTraderAccount} returns this
 */
proto.ProtoOACtidTraderAccount.prototype.setTraderlogin = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOACtidTraderAccount} returns this
 */
proto.ProtoOACtidTraderAccount.prototype.clearTraderlogin = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOACtidTraderAccount.prototype.hasTraderlogin = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoOAAssetClass.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoOAAssetClass.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoOAAssetClass} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOAAssetClass.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoOAAssetClass}
 */
proto.ProtoOAAssetClass.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoOAAssetClass;
  return proto.ProtoOAAssetClass.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoOAAssetClass} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoOAAssetClass}
 */
proto.ProtoOAAssetClass.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoOAAssetClass.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoOAAssetClass.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoOAAssetClass} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOAAssetClass.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.ProtoOAAssetClass.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAAssetClass} returns this
 */
proto.ProtoOAAssetClass.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAAssetClass} returns this
 */
proto.ProtoOAAssetClass.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAAssetClass.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.ProtoOAAssetClass.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ProtoOAAssetClass} returns this
 */
proto.ProtoOAAssetClass.prototype.setName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAAssetClass} returns this
 */
proto.ProtoOAAssetClass.prototype.clearName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAAssetClass.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoOADepthQuote.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoOADepthQuote.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoOADepthQuote} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOADepthQuote.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    size: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    bid: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    ask: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoOADepthQuote}
 */
proto.ProtoOADepthQuote.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoOADepthQuote;
  return proto.ProtoOADepthQuote.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoOADepthQuote} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoOADepthQuote}
 */
proto.ProtoOADepthQuote.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSize(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAsk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoOADepthQuote.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoOADepthQuote.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoOADepthQuote} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOADepthQuote.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint64(
      5,
      f
    );
  }
};


/**
 * required uint64 id = 1;
 * @return {number}
 */
proto.ProtoOADepthQuote.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADepthQuote} returns this
 */
proto.ProtoOADepthQuote.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADepthQuote} returns this
 */
proto.ProtoOADepthQuote.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADepthQuote.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required uint64 size = 3;
 * @return {number}
 */
proto.ProtoOADepthQuote.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADepthQuote} returns this
 */
proto.ProtoOADepthQuote.prototype.setSize = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADepthQuote} returns this
 */
proto.ProtoOADepthQuote.prototype.clearSize = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADepthQuote.prototype.hasSize = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 bid = 4;
 * @return {number}
 */
proto.ProtoOADepthQuote.prototype.getBid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADepthQuote} returns this
 */
proto.ProtoOADepthQuote.prototype.setBid = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADepthQuote} returns this
 */
proto.ProtoOADepthQuote.prototype.clearBid = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADepthQuote.prototype.hasBid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 ask = 5;
 * @return {number}
 */
proto.ProtoOADepthQuote.prototype.getAsk = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOADepthQuote} returns this
 */
proto.ProtoOADepthQuote.prototype.setAsk = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOADepthQuote} returns this
 */
proto.ProtoOADepthQuote.prototype.clearAsk = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOADepthQuote.prototype.hasAsk = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ProtoOAMarginCall.prototype.toObject = function(opt_includeInstance) {
  return proto.ProtoOAMarginCall.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ProtoOAMarginCall} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOAMarginCall.toObject = function(includeInstance, msg) {
  var f, obj = {
    margincalltype: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    marginlevelthreshold: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    utclastupdatetimestamp: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ProtoOAMarginCall}
 */
proto.ProtoOAMarginCall.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ProtoOAMarginCall;
  return proto.ProtoOAMarginCall.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ProtoOAMarginCall} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ProtoOAMarginCall}
 */
proto.ProtoOAMarginCall.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ProtoOANotificationType} */ (reader.readEnum());
      msg.setMargincalltype(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMarginlevelthreshold(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUtclastupdatetimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ProtoOAMarginCall.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ProtoOAMarginCall.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ProtoOAMarginCall} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ProtoOAMarginCall.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ProtoOANotificationType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * required ProtoOANotificationType marginCallType = 1;
 * @return {!proto.ProtoOANotificationType}
 */
proto.ProtoOAMarginCall.prototype.getMargincalltype = function() {
  return /** @type {!proto.ProtoOANotificationType} */ (jspb.Message.getFieldWithDefault(this, 1, 61));
};


/**
 * @param {!proto.ProtoOANotificationType} value
 * @return {!proto.ProtoOAMarginCall} returns this
 */
proto.ProtoOAMarginCall.prototype.setMargincalltype = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAMarginCall} returns this
 */
proto.ProtoOAMarginCall.prototype.clearMargincalltype = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAMarginCall.prototype.hasMargincalltype = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required double marginLevelThreshold = 2;
 * @return {number}
 */
proto.ProtoOAMarginCall.prototype.getMarginlevelthreshold = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAMarginCall} returns this
 */
proto.ProtoOAMarginCall.prototype.setMarginlevelthreshold = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAMarginCall} returns this
 */
proto.ProtoOAMarginCall.prototype.clearMarginlevelthreshold = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAMarginCall.prototype.hasMarginlevelthreshold = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 utcLastUpdateTimestamp = 3;
 * @return {number}
 */
proto.ProtoOAMarginCall.prototype.getUtclastupdatetimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ProtoOAMarginCall} returns this
 */
proto.ProtoOAMarginCall.prototype.setUtclastupdatetimestamp = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ProtoOAMarginCall} returns this
 */
proto.ProtoOAMarginCall.prototype.clearUtclastupdatetimestamp = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ProtoOAMarginCall.prototype.hasUtclastupdatetimestamp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.ProtoOAPayloadType = {
  PROTO_OA_APPLICATION_AUTH_REQ: 2100,
  PROTO_OA_APPLICATION_AUTH_RES: 2101,
  PROTO_OA_ACCOUNT_AUTH_REQ: 2102,
  PROTO_OA_ACCOUNT_AUTH_RES: 2103,
  PROTO_OA_VERSION_REQ: 2104,
  PROTO_OA_VERSION_RES: 2105,
  PROTO_OA_NEW_ORDER_REQ: 2106,
  PROTO_OA_TRAILING_SL_CHANGED_EVENT: 2107,
  PROTO_OA_CANCEL_ORDER_REQ: 2108,
  PROTO_OA_AMEND_ORDER_REQ: 2109,
  PROTO_OA_AMEND_POSITION_SLTP_REQ: 2110,
  PROTO_OA_CLOSE_POSITION_REQ: 2111,
  PROTO_OA_ASSET_LIST_REQ: 2112,
  PROTO_OA_ASSET_LIST_RES: 2113,
  PROTO_OA_SYMBOLS_LIST_REQ: 2114,
  PROTO_OA_SYMBOLS_LIST_RES: 2115,
  PROTO_OA_SYMBOL_BY_ID_REQ: 2116,
  PROTO_OA_SYMBOL_BY_ID_RES: 2117,
  PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ: 2118,
  PROTO_OA_SYMBOLS_FOR_CONVERSION_RES: 2119,
  PROTO_OA_SYMBOL_CHANGED_EVENT: 2120,
  PROTO_OA_TRADER_REQ: 2121,
  PROTO_OA_TRADER_RES: 2122,
  PROTO_OA_TRADER_UPDATE_EVENT: 2123,
  PROTO_OA_RECONCILE_REQ: 2124,
  PROTO_OA_RECONCILE_RES: 2125,
  PROTO_OA_EXECUTION_EVENT: 2126,
  PROTO_OA_SUBSCRIBE_SPOTS_REQ: 2127,
  PROTO_OA_SUBSCRIBE_SPOTS_RES: 2128,
  PROTO_OA_UNSUBSCRIBE_SPOTS_REQ: 2129,
  PROTO_OA_UNSUBSCRIBE_SPOTS_RES: 2130,
  PROTO_OA_SPOT_EVENT: 2131,
  PROTO_OA_ORDER_ERROR_EVENT: 2132,
  PROTO_OA_DEAL_LIST_REQ: 2133,
  PROTO_OA_DEAL_LIST_RES: 2134,
  PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ: 2135,
  PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ: 2136,
  PROTO_OA_GET_TRENDBARS_REQ: 2137,
  PROTO_OA_GET_TRENDBARS_RES: 2138,
  PROTO_OA_EXPECTED_MARGIN_REQ: 2139,
  PROTO_OA_EXPECTED_MARGIN_RES: 2140,
  PROTO_OA_MARGIN_CHANGED_EVENT: 2141,
  PROTO_OA_ERROR_RES: 2142,
  PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ: 2143,
  PROTO_OA_CASH_FLOW_HISTORY_LIST_RES: 2144,
  PROTO_OA_GET_TICKDATA_REQ: 2145,
  PROTO_OA_GET_TICKDATA_RES: 2146,
  PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT: 2147,
  PROTO_OA_CLIENT_DISCONNECT_EVENT: 2148,
  PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ: 2149,
  PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES: 2150,
  PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ: 2151,
  PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES: 2152,
  PROTO_OA_ASSET_CLASS_LIST_REQ: 2153,
  PROTO_OA_ASSET_CLASS_LIST_RES: 2154,
  PROTO_OA_DEPTH_EVENT: 2155,
  PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ: 2156,
  PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES: 2157,
  PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ: 2158,
  PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES: 2159,
  PROTO_OA_SYMBOL_CATEGORY_REQ: 2160,
  PROTO_OA_SYMBOL_CATEGORY_RES: 2161,
  PROTO_OA_ACCOUNT_LOGOUT_REQ: 2162,
  PROTO_OA_ACCOUNT_LOGOUT_RES: 2163,
  PROTO_OA_ACCOUNT_DISCONNECT_EVENT: 2164,
  PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_RES: 2165,
  PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_RES: 2166,
  PROTO_OA_MARGIN_CALL_LIST_REQ: 2167,
  PROTO_OA_MARGIN_CALL_LIST_RES: 2168,
  PROTO_OA_MARGIN_CALL_UPDATE_REQ: 2169,
  PROTO_OA_MARGIN_CALL_UPDATE_RES: 2170,
  PROTO_OA_MARGIN_CALL_UPDATE_EVENT: 2171,
  PROTO_OA_MARGIN_CALL_TRIGGER_EVENT: 2172,
  PROTO_OA_REFRESH_TOKEN_REQ: 2173,
  PROTO_OA_REFRESH_TOKEN_RES: 2174
};

/**
 * @enum {number}
 */
proto.ProtoOADayOfWeek = {
  NONE: 0,
  MONDAY: 1,
  TUESDAY: 2,
  WEDNESDAY: 3,
  THURSDAY: 4,
  FRIDAY: 5,
  SATURDAY: 6,
  SUNDAY: 7
};

/**
 * @enum {number}
 */
proto.ProtoOACommissionType = {
  USD_PER_MILLION_USD: 1,
  USD_PER_LOT: 2,
  PERCENTAGE_OF_VALUE: 3,
  QUOTE_CCY_PER_LOT: 4
};

/**
 * @enum {number}
 */
proto.ProtoOASymbolDistanceType = {
  SYMBOL_DISTANCE_IN_POINTS: 1,
  SYMBOL_DISTANCE_IN_PERCENTAGE: 2
};

/**
 * @enum {number}
 */
proto.ProtoOAMinCommissionType = {
  CURRENCY: 1,
  QUOTE_CURRENCY: 2
};

/**
 * @enum {number}
 */
proto.ProtoOATradingMode = {
  ENABLED: 0,
  DISABLED_WITHOUT_PENDINGS_EXECUTION: 1,
  DISABLED_WITH_PENDINGS_EXECUTION: 2,
  CLOSE_ONLY_MODE: 3
};

/**
 * @enum {number}
 */
proto.ProtoOASwapCalculationType = {
  PIPS: 0,
  PERCENTAGE: 1
};

/**
 * @enum {number}
 */
proto.ProtoOAAccessRights = {
  FULL_ACCESS: 0,
  CLOSE_ONLY: 1,
  NO_TRADING: 2,
  NO_LOGIN: 3
};

/**
 * @enum {number}
 */
proto.ProtoOATotalMarginCalculationType = {
  MAX: 0,
  SUM: 1,
  NET: 2
};

/**
 * @enum {number}
 */
proto.ProtoOAAccountType = {
  HEDGED: 0,
  NETTED: 1,
  SPREAD_BETTING: 2
};

/**
 * @enum {number}
 */
proto.ProtoOAPositionStatus = {
  POSITION_STATUS_OPEN: 1,
  POSITION_STATUS_CLOSED: 2,
  POSITION_STATUS_CREATED: 3,
  POSITION_STATUS_ERROR: 4
};

/**
 * @enum {number}
 */
proto.ProtoOATradeSide = {
  BUY: 1,
  SELL: 2
};

/**
 * @enum {number}
 */
proto.ProtoOAOrderType = {
  MARKET: 1,
  LIMIT: 2,
  STOP: 3,
  STOP_LOSS_TAKE_PROFIT: 4,
  MARKET_RANGE: 5,
  STOP_LIMIT: 6
};

/**
 * @enum {number}
 */
proto.ProtoOATimeInForce = {
  GOOD_TILL_DATE: 1,
  GOOD_TILL_CANCEL: 2,
  IMMEDIATE_OR_CANCEL: 3,
  FILL_OR_KILL: 4,
  MARKET_ON_OPEN: 5
};

/**
 * @enum {number}
 */
proto.ProtoOAOrderStatus = {
  ORDER_STATUS_ACCEPTED: 1,
  ORDER_STATUS_FILLED: 2,
  ORDER_STATUS_REJECTED: 3,
  ORDER_STATUS_EXPIRED: 4,
  ORDER_STATUS_CANCELLED: 5
};

/**
 * @enum {number}
 */
proto.ProtoOAOrderTriggerMethod = {
  TRADE: 1,
  OPPOSITE: 2,
  DOUBLE_TRADE: 3,
  DOUBLE_OPPOSITE: 4
};

/**
 * @enum {number}
 */
proto.ProtoOAExecutionType = {
  ORDER_ACCEPTED: 2,
  ORDER_FILLED: 3,
  ORDER_REPLACED: 4,
  ORDER_CANCELLED: 5,
  ORDER_EXPIRED: 6,
  ORDER_REJECTED: 7,
  ORDER_CANCEL_REJECTED: 8,
  SWAP: 9,
  DEPOSIT_WITHDRAW: 10,
  ORDER_PARTIAL_FILL: 11,
  BONUS_DEPOSIT_WITHDRAW: 12
};

/**
 * @enum {number}
 */
proto.ProtoOAChangeBonusType = {
  BONUS_DEPOSIT: 0,
  BONUS_WITHDRAW: 1
};

/**
 * @enum {number}
 */
proto.ProtoOAChangeBalanceType = {
  BALANCE_DEPOSIT: 0,
  BALANCE_WITHDRAW: 1,
  BALANCE_DEPOSIT_STRATEGY_COMMISSION_INNER: 3,
  BALANCE_WITHDRAW_STRATEGY_COMMISSION_INNER: 4,
  BALANCE_DEPOSIT_IB_COMMISSIONS: 5,
  BALANCE_WITHDRAW_IB_SHARED_PERCENTAGE: 6,
  BALANCE_DEPOSIT_IB_SHARED_PERCENTAGE_FROM_SUB_IB: 7,
  BALANCE_DEPOSIT_IB_SHARED_PERCENTAGE_FROM_BROKER: 8,
  BALANCE_DEPOSIT_REBATE: 9,
  BALANCE_WITHDRAW_REBATE: 10,
  BALANCE_DEPOSIT_STRATEGY_COMMISSION_OUTER: 11,
  BALANCE_WITHDRAW_STRATEGY_COMMISSION_OUTER: 12,
  BALANCE_WITHDRAW_BONUS_COMPENSATION: 13,
  BALANCE_WITHDRAW_IB_SHARED_PERCENTAGE_TO_BROKER: 14,
  BALANCE_DEPOSIT_DIVIDENDS: 15,
  BALANCE_WITHDRAW_DIVIDENDS: 16,
  BALANCE_WITHDRAW_GSL_CHARGE: 17,
  BALANCE_WITHDRAW_ROLLOVER: 18,
  BALANCE_DEPOSIT_NONWITHDRAWABLE_BONUS: 19,
  BALANCE_WITHDRAW_NONWITHDRAWABLE_BONUS: 20,
  BALANCE_DEPOSIT_SWAP: 21,
  BALANCE_WITHDRAW_SWAP: 22,
  BALANCE_DEPOSIT_MANAGEMENT_FEE: 27,
  BALANCE_WITHDRAW_MANAGEMENT_FEE: 28,
  BALANCE_DEPOSIT_PERFORMANCE_FEE: 29,
  BALANCE_WITHDRAW_FOR_SUBACCOUNT: 30,
  BALANCE_DEPOSIT_TO_SUBACCOUNT: 31,
  BALANCE_WITHDRAW_FROM_SUBACCOUNT: 32,
  BALANCE_DEPOSIT_FROM_SUBACCOUNT: 33,
  BALANCE_WITHDRAW_INACTIVITY_FEE: 35,
  BALANCE_DEPOSIT_TRANSFER: 36,
  BALANCE_WITHDRAW_TRANSFER: 37,
  BALANCE_DEPOSIT_CONVERTED_BONUS: 38
};

/**
 * @enum {number}
 */
proto.ProtoOADealStatus = {
  FILLED: 2,
  PARTIALLY_FILLED: 3,
  REJECTED: 4,
  INTERNALLY_REJECTED: 5,
  ERROR: 6,
  MISSED: 7
};

/**
 * @enum {number}
 */
proto.ProtoOATrendbarPeriod = {
  M1: 1,
  M2: 2,
  M3: 3,
  M4: 4,
  M5: 5,
  M10: 6,
  M15: 7,
  M30: 8,
  H1: 9,
  H4: 10,
  H12: 11,
  D1: 12,
  W1: 13,
  MN1: 14
};

/**
 * @enum {number}
 */
proto.ProtoOAQuoteType = {
  BID: 1,
  ASK: 2
};

/**
 * @enum {number}
 */
proto.ProtoOAClientPermissionScope = {
  SCOPE_VIEW: 0,
  SCOPE_TRADE: 1
};

/**
 * @enum {number}
 */
proto.ProtoOANotificationType = {
  MARGIN_LEVEL_THRESHOLD_1: 61,
  MARGIN_LEVEL_THRESHOLD_2: 62,
  MARGIN_LEVEL_THRESHOLD_3: 63
};

/**
 * @enum {number}
 */
proto.ProtoOAErrorCode = {
  OA_AUTH_TOKEN_EXPIRED: 1,
  ACCOUNT_NOT_AUTHORIZED: 2,
  ALREADY_LOGGED_IN: 14,
  CH_CLIENT_AUTH_FAILURE: 101,
  CH_CLIENT_NOT_AUTHENTICATED: 102,
  CH_CLIENT_ALREADY_AUTHENTICATED: 103,
  CH_ACCESS_TOKEN_INVALID: 104,
  CH_SERVER_NOT_REACHABLE: 105,
  CH_CTID_TRADER_ACCOUNT_NOT_FOUND: 106,
  CH_OA_CLIENT_NOT_FOUND: 107,
  REQUEST_FREQUENCY_EXCEEDED: 108,
  SERVER_IS_UNDER_MAINTENANCE: 109,
  CHANNEL_IS_BLOCKED: 110,
  CONNECTIONS_LIMIT_EXCEEDED: 67,
  WORSE_GSL_NOT_ALLOWED: 68,
  SYMBOL_HAS_HOLIDAY: 69,
  NOT_SUBSCRIBED_TO_SPOTS: 112,
  ALREADY_SUBSCRIBED: 113,
  SYMBOL_NOT_FOUND: 114,
  UNKNOWN_SYMBOL: 115,
  INCORRECT_BOUNDARIES: 35,
  NO_QUOTES: 117,
  NOT_ENOUGH_MONEY: 118,
  MAX_EXPOSURE_REACHED: 119,
  POSITION_NOT_FOUND: 120,
  ORDER_NOT_FOUND: 121,
  POSITION_NOT_OPEN: 122,
  POSITION_LOCKED: 123,
  TOO_MANY_POSITIONS: 124,
  TRADING_BAD_VOLUME: 125,
  TRADING_BAD_STOPS: 126,
  TRADING_BAD_PRICES: 127,
  TRADING_BAD_STAKE: 128,
  PROTECTION_IS_TOO_CLOSE_TO_MARKET: 129,
  TRADING_BAD_EXPIRATION_DATE: 130,
  PENDING_EXECUTION: 131,
  TRADING_DISABLED: 132,
  TRADING_NOT_ALLOWED: 133,
  UNABLE_TO_CANCEL_ORDER: 134,
  UNABLE_TO_AMEND_ORDER: 135,
  SHORT_SELLING_NOT_ALLOWED: 136
};

/**
 * @enum {number}
 */
proto.ProtoOALimitedRiskMarginCalculationStrategy = {
  ACCORDING_TO_LEVERAGE: 0,
  ACCORDING_TO_GSL: 1,
  ACCORDING_TO_GSL_AND_LEVERAGE: 2
};

goog.object.extend(exports, proto);
